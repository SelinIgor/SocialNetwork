{"version":3,"sources":["contonents/Havbar/Nav.module.css","contonents/Music/Music.module.css","contonents/Masseges/MassegeItem/MassegesItem.module.css","datas/img/user.png","datas/img/prel.gif","contonents/Setting/Setting.module.css","serviceWorker.js","api/api.js","redux/auth-reducer.js","contonents/Havbar/Nav.jsx","contonents/Masseges/Masseges.js","contonents/Music/Music.js","redux/dialogsReducer.js","contonents/Masseges/DialogItem/DialogItem.js","contonents/Masseges/MassegeItem/MassegeItem.js","contonents/FormsControls/FormsControls.js","hoc/withAuthRedirect.js","contonents/Masseges/MassegesContainer.js","redux/usersReducer.js","contonents/Users/Users.jsx","contonents/common/Preloader/Preloader.jsx","redux/usersSelectors.js","contonents/Users/UsersContainer.jsx","contonents/ProfileCom/ProfileInfo/ProfileStatus/ProfileStatus.jsx","contonents/ProfileCom/ProfileInfo/ProfileFormData.jsx","contonents/ProfileCom/ProfileInfo/ProfileInfo.js","redux/profileReducer.js","contonents/ProfileCom/My posts/Post/Post.jsx","contonents/ProfileCom/My posts/MyPosts.jsx","contonents/ProfileCom/My posts/MyPostsContainer.jsx","contonents/ProfileCom/ProfileCom.jsx","contonents/ProfileCom/ProfileComContainer.jsx","contonents/Header/Header.js","contonents/Header/HeaderContainer.jsx","contonents/login/Loginpage.js","redux/appReducer.js","redux/redux-store.js","contonents/Footer/Footer.jsx","contonents/Setting/Setting.js","App.js","index.js","contonents/ProfileCom/ProfileInfo/ProfileInfo.module.css","contonents/FormsControls/FormsControls.module.css","contonents/Masseges/Masseges.module.css","contonents/Masseges/DialogItem/DialogItem.module.css","contonents/ProfileCom/My posts/MyPosts.module.css","contonents/login/LoginPage.module.css","contonents/Users/Users.module.css","contonents/ProfileCom/ProfileInfo/ProfileFormData.module.css","contonents/ProfileCom/My posts/Post/Post.module.css","contonents/Header/Header.module.css","contonents/common/Preloader/Preloader.module.css","contonents/ProfileCom/ProfileInfo/ProfileStatus/ProlifeStatus.module.css","contonents/Footer/Footer.module.css"],"names":["module","exports","Boolean","window","location","hostname","match","instance","axios","withCredentials","baseURL","headers","usersAPI","currentPage","pageSize","get","then","response","data","userId","post","delete","authAPI","email","password","rememberMe","captcha","ProfileAPI","status","put","photos","formData","FormData","append","profile","SecurityAPI","InitialState","id","login","isAuth","photo","captchaUrl","setUserAuthData","type","getUserAuthData","dispatch","resultCode","getCaptchaUrl","url","setCaptchaSuccess","logout","authReducer","state","action","connect","max","auth","props","className","s","Nav","topNav","Container","to","nav","activeClassName","active","onClick","Music","musicContainer","masseges","text","dialogs","name","kartinka","dialogsReducer","stateCopy","NewSms","newMassage","push","DialogItem","path","src","nameDialog","MessageItem","messagesItem","Element","input","meta","hasError","touched","error","styleTextarea","classNames","styles","spanError","Textarea","maxLength50","value","length","AddReduxMassage","reduxForm","form","onSubmit","handleSubmit","Field","textarea","component","validate","shareButton","Masseges","MassegesElements","dialogsPage","map","massege","DislogsElemets","dialog","inputMassage","values","sendSms","newMassegeBody","mapStateToPropsForRedirect","withAuthRedirect","Component","compose","MassagePage","sendSmsActionCreator","users","totalUsersCount","portionSize","isFetching","followProgress","setToggleFetching","followingInProgress","usersReducer","u","usersId","followed","filter","Users","totalPagesCount","Math","ceil","pages","i","portionCount","useState","portionNumber","setPortionNumber","leftBorder","rightBorder","a","paginator","onClickChanged","prevCurrentPage","buttonsBlock","p","selectedPage","key","newCurrentPage","alt","userImg","small","userPhoto","disabled","some","unfollow","follow","Preloader","style","preloaderConatiner","prel","preloader","getCurrentPage","createSelector","UsersPage","getIsFetching","getFollowProgress","UsersContainer","getUsers","this","React","setCurrentPage","items","totalCount","ProfileStatus","editMode","onStatusChange","e","setState","currentTarget","ActivateEditMode","DeactivateEditMode","updateStatus","prevProps","prevState","snapshot","mainContainer","onDoubleClick","statusText","onChange","autoFocus","onBlur","Input","ProfileDataFormRedux","container","buttons","btn","onCancel","undefined","placeholder","Object","entries","contacts","ProfileInfo","setEditMode","Contact","contactTitle","contactValue","ProfileData","aboutMe","lookingForAJob","lookingForAJobDescription","box","background","avatar","isOwner","authorizedUserID","target","files","savePhoto","userName","fullName","profileData","updateProfile","postData","likes","liked","buttonDef","getUserProfile","setProfileStatus","profileReducer","NewPost","newPostText","postId","Post","item","addLike","maxLength30","maxLength","AddPostRedux","MyPosts","newPost","myPost","addPost","posts","MyPostsContainer","ProfilePage","ProfileCom","ProfileComContainer","params","getProfileStatus","refreshProfile","file","getState","message","messages","stopSubmit","_error","withRouter","Header","headerContainer","logoContainer","nameLogo","HeaderContainer","required","buttonClasses","btnSpecial","LoginReduxForm","textContainer","loginText","initialized","appReducer","reducers","combineReducers","formReducer","appCommon","store","createStore","applyMiddleware","thunkMiddleware","Footer","footerContainer","authorInfo","Setting","settingsContainer","App","initializeApp","exact","render","MassegesContainer","AppContainer","promise","Promise","all","MainApp","rel","href","integrity","crossOrigin","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.a54ef9c9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Nav\":\"Nav_Nav__1LUYF\",\"nav\":\"Nav_nav__3T7Hp\",\"active\":\"Nav_active__3PK3b\",\"Container\":\"Nav_Container__uhMxr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"musicContainer\":\"Music_musicContainer__21OQf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messagesItem\":\"MassegesItem_messagesItem__3DRQ4\"};","module.exports = __webpack_public_path__ + \"static/media/user.83bd44a6.png\";","module.exports = __webpack_public_path__ + \"static/media/prel.6e5d6096.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settingsContainer\":\"Setting_settingsContainer__3pTNN\"};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import * as axios from \"axios\";\r\n\r\n     const instance = axios.create(\r\n         {\r\n             withCredentials: true,\r\n             baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n             headers:{\r\n                 \"API-KEY\":\"14afbc17-5def-47a5-befe-a2e4e52003d8\"\r\n             }\r\n         }\r\n     )\r\n\r\n\r\nexport const usersAPI = {\r\n         getUsers(currentPage=1,pageSize=5){\r\n             return instance.get(`users?page=${currentPage}&count=${pageSize}`).then(response => {\r\n                 return response.data\r\n             });\r\n         },\r\n         follow(userId){\r\n            return  instance.post(`follow/${userId}`)\r\n\r\n         },\r\n         unfollow(userId){\r\n          return  instance.delete(`follow/${userId}`)\r\n         },\r\n         setProfile(userId){\r\n            return  instance.get(`profile/${userId}`)\r\n         }\r\n         }\r\n\r\nexport const authAPI = {\r\n   authme(){\r\n      return  instance.get(`auth/me`)\r\n   },\r\n    login(email,password,rememberMe, captcha=null){\r\n        return instance.post(`/auth/login`, {email,password,rememberMe,captcha})\r\n    },\r\n    logout(){\r\n       return instance.delete(`/auth/login`)\r\n    }\r\n     }\r\n\r\nexport const ProfileAPI = {\r\n        getStatus(userId){\r\n            return  instance.get(`profile/status/`+ userId)\r\n        },\r\n        updateStatus(status){\r\n            return  instance.put(`profile/status/`,{status})\r\n        },\r\n    savePhoto(photos){\r\n        const formData = new FormData();\r\n        formData.append('image',photos)\r\n        return instance.put(`profile/photo`,formData,{\r\n            headers: {\r\n                'content-type': 'multipart/form-data'\r\n            }\r\n        })\r\n    },\r\n    updateProfile(profile){\r\n        return  instance.put(`profile`,profile)\r\n    }\r\n\r\n}\r\nexport const SecurityAPI = {\r\n    getCaptcha(){\r\n        return instance.get(`security/get-captcha-url`);\r\n    }}\r\n\r\n\r\n","import {authAPI, SecurityAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\n;\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\nconst GET_CAPTCHA_URL = `GET_CAPTCHA_URL`;\r\nlet InitialState ={\r\n    data: {\r\n        id: null,\r\n        email: null,\r\n        login: null,\r\n        isAuth:false,\r\n        photo: null,\r\n        captchaUrl: null\r\n    }\r\n};\r\n\r\nlet authReducer =(state = InitialState,action)=> {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:{\r\n            return  {...state,\r\n               ...action.data\r\n            };\r\n        }\r\n        case GET_CAPTCHA_URL:{\r\n            debugger\r\n            return {\r\n                ...state,\r\n                captchaUrl: action.captchaUrl\r\n\r\n            }\r\n\r\n        }\r\n        default: return state;\r\n    }\r\n\r\n};\r\nexport let setUserAuthData = (id, email, login, isAuth)=>{\r\n    return{\r\n        type:SET_USER_DATA,\r\n        data:{ id,email,login,isAuth}\r\n    }\r\n};\r\nexport const getUserAuthData = () =>\r\n     (dispatch)=>{\r\n         return authAPI.authme().then(response => {\r\n            if(response.data.resultCode===0) {\r\n                let {id,email,login} = response.data.data;\r\n                dispatch(setUserAuthData(id,email,login,true));\r\n            }\r\n        });\r\n\r\n};\r\nexport const login = (email,password,rememberMe,captcha) =>{\r\n\r\n    return (dispatch)=>{\r\n        authAPI.login(email,password,rememberMe,captcha).then(response => {\r\n            if(response.data.resultCode===0) {\r\n                dispatch(getUserAuthData());\r\n            }\r\n            else {\r\n                if(response.data.resultCode===10){\r\n                    dispatch(getCaptchaUrl())\r\n                }\r\n                let massege = response.data.messages.length>0?response.data.messages[0]:\"Some error\";\r\n                dispatch(stopSubmit(\"login\",{_error:massege}));\r\n\r\n            }\r\n\r\n\r\n\r\n        });\r\n    }\r\n};\r\nexport const setCaptchaSuccess = (captchaUrl)=>{\r\n    return{\r\n        type:GET_CAPTCHA_URL,\r\n        captchaUrl\r\n    }\r\n};\r\nexport const getCaptchaUrl = ()=>{\r\n    return (dispatch)=>{\r\n        SecurityAPI.getCaptcha().then(response =>{\r\n            debugger\r\n            const captchaUrl = response.data.url;\r\n            dispatch(setCaptchaSuccess(captchaUrl))\r\n        })\r\n\r\n    }\r\n}\r\nexport const logout = () =>{\r\n    return (dispatch)=>{\r\n        authAPI.logout().then(response => {\r\n            if(response.data.resultCode===0) {\r\n                dispatch(setUserAuthData(null,null,null,false));\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\nexport default authReducer;\r\n\r\n","import React from 'react';\r\nimport s from './Nav.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\nconst Nav = (props)=> {\r\n    return (<div className={s.Nav}>\r\n        <div className={s.topNav}>\r\n            <div className={s.Container}>\r\n                <div>\r\n                <NavLink to=\"/profile\" className={s.nav}  activeClassName={s.active}>Profile</NavLink>\r\n\r\n                <NavLink to=\"/messages\"  className={s.nav} activeClassName={s.active} >Messages</NavLink>\r\n\r\n                <NavLink to=\"/music\"  className={s.nav} activeClassName={s.active} >Music</NavLink>\r\n\r\n                <NavLink to=\"/users\"  className={s.nav} activeClassName={s.active}> Users</NavLink>\r\n\r\n                <NavLink to=\"/setting\"  className={s.nav} activeClassName={s.active}> Setting</NavLink>\r\n                </div>\r\n                <div>\r\n                {\r\n                    props.isAuth ?\r\n                            <NavLink to={\"#\"} className={s.nav} onClick={props.logout} >Exit</NavLink>\r\n                        : <NavLink className={s.nav} activeClassName={s.active}  to={\"/login\"}>Login</NavLink>\r\n                }\r\n                </div>\r\n\r\n\r\n            </div>\r\n        </div>\r\n        </div>);}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        isAuth:state.auth.isAuth,\r\n\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,{ logout})(Nav)\r\n","import React from 'react';\r\nimport s from './Masseges.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport MessageItem from \"./MassegeItem/MassegeItem\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Element} from './../FormsControls/FormsControls'\r\nconst Textarea = Element(\"textarea\")\r\nconst maxLength = (max) =>\r\n    (value)=> {\r\n        if(value && value.length > max) return `Must be ${max} characters or less`\r\n        return undefined}\r\nconst maxLength50 = maxLength(50)\r\nconst Masseges = (props)=> {\r\n    let addNewMassage = (values) =>{\r\n    props.sendSms(values.newMassegeBody);\r\n    };\r\n    let MassegesElements = props.dialogsPage.masseges.map((massege)=> <MessageItem text={massege.text}/>) ;\r\n    let DislogsElemets = props.dialogsPage.dialogs.map((dialog)=> <DialogItem name={dialog.name} id={dialog.id} kartinka={dialog.kartinka}/> );\r\n    return (<div className={s[\"mainMessages\"]}>\r\n        <div className={s[\"dialogsItem\"]}>\r\n            {DislogsElemets}\r\n        </div>\r\n        <div className={s.dialogs}>\r\n            {MassegesElements}\r\n            <div className={s.inputMassage}>\r\n     <AddReduxMassage onSubmit={addNewMassage} />\r\n            </div>\r\n        </div>\r\n        </div>\r\n        );\r\n        }\r\nconst AddMassage =(props)=>{\r\n    return(       <form onSubmit={props.handleSubmit}>\r\n        <Field className={s.textarea} component={Textarea} validate={[maxLength50]} name={\"newMassegeBody\"} />\r\n        <div>\r\n            <button type=\"submit\" className={s.shareButton}> Send</button>\r\n\r\n        </div>\r\n    </form>)\r\n}\r\n        const AddReduxMassage = reduxForm({form:\"addMassage\"})(AddMassage)\r\n\r\n        export default Masseges;\r\n","import React from 'react';\r\nimport s from './Music.module.css';\r\n\r\n\r\nconst Music = ()=> {\r\n    return (\r\n        <div>\r\n            <div className={s.musicContainer}>\r\n      Coming soon...\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default Music;\r\n","\r\nconst ADD_SMS = \"ADD_SMS\";\r\nlet InitialState ={\r\n    masseges :[{text:'Hi there'},{text:'What Am I doing wrong?'},{text:'Nothing. Cant get it'},{text:'Okey'}],\r\n    dialogs :[{name:\"Igor\", id:1, kartinka:\"https://i.pinimg.com/736x/c9/eb/dd/c9ebddca44e1b308c672e641af252be5.jpg\"},\r\n        {name:\"Nestor\", id:2,kartinka:\"https://avatarko.ru/img/kartinka/33/multfilm_lyagushka_32117.jpg\"},\r\n        {name:\"Marta\" ,id:3,kartinka:\"https://hahadu.ru/wp-content/uploads/2019/07/3-20.jpg\"},\r\n        {name:\"Oleg\", id:4,kartinka:\"https://focus.ua/storage/pub/images/2017/2615387.jpg\"}]\r\n\r\n}\r\n\r\nlet dialogsReducer=(state = InitialState,action)=>{\r\nswitch (action.type) {\r\n    case ADD_SMS: {\r\n        let stateCopy = {...state,\r\n            masseges:[...state.masseges]};\r\n\r\n        let NewSms = {\r\n            text: action.newMassage\r\n        };\r\n        stateCopy.masseges.push(NewSms);\r\n        return stateCopy;\r\n    }\r\n    default: return state;\r\n}\r\n\r\n\r\n}\r\n\r\n\r\nexport let sendSmsActionCreator=(newMassage)=>{\r\n    return{type: ADD_SMS, newMassage}\r\n};\r\n\r\nexport default dialogsReducer;\r\n\r\n","import React from 'react';\r\nimport s from './DialogItem.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nconst DialogItem = (props)=>{\r\n    let path='/Masseges/' + props.id;\r\n    return(\r\n        <div className={s.dialogs}>\r\n            <div className={s.photo}><img  src={props.kartinka} className={s.kartinka}/></div>\r\n            <div className={s.nameDialog}><NavLink to={path} activeClassName= {s.active} className={s.nameDialog} >{props.name}</NavLink>\r\n            </div>\r\n        </div>);\r\n}\r\n        export default DialogItem;\r\n","import React from 'react';\r\nimport s from './MassegesItem.module.css';\r\n\r\nconst MessageItem =(props)=>{\r\n    return( <div>\r\n        <div className={s.messagesItem}>\r\n        {props.text}\r\n            </div>\r\n    </div>);\r\n}\r\n        export default MessageItem;\r\n","import React from \"react\";\r\nimport styles from \"./FormsControls.module.css\"\r\nimport classNames from 'classnames'\r\nexport const Element = (Element) =>({input,meta,className,...props})=> {\r\n    const hasError = meta.touched && meta.error;\r\n    const styleTextarea = classNames(className, (hasError && styles.error))\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Element {...input} {...props} className={styleTextarea}/>\r\n            </div>\r\n            {hasError && <span className={styles.spanError}>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state)=>{\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nlet withAuthRedirect = (Component)=>{\r\n    let RedirectComponent =(props)=>{\r\n        if(!props.isAuth) return <Redirect to='/login'/>\r\n    return(<Component {...props}/>)\r\n    }\r\n   return connect(mapStateToPropsForRedirect,{})(RedirectComponent);\r\n}\r\nexport default withAuthRedirect;","import React from 'react';\r\n\r\nimport {sendSmsActionCreator} from \"../../redux/dialogsReducer\";\r\nimport Masseges from \"./Masseges\";\r\nimport {connect} from \"react-redux\";\r\nimport withAuthRedirect from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        dialogsPage:state.MassagePage,\r\n\r\n    }\r\n};\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return {\r\n        sendSms:(newMassage)=>{dispatch(sendSmsActionCreator(newMassage))},\r\n\r\n\r\n    }\r\n};\r\nexport default compose(\r\n    connect(mapStateToProps,mapDispatchToProps),\r\n    withAuthRedirect\r\n)\r\n(Masseges);\r\n","import {usersAPI} from \"../api/api\";\r\n\r\nconst FOLLOW = \"FOLLOW\";\r\nconst UNFOLLOW = \"UNFOLLOW\";\r\nconst SET_USERS = \"SET_USERS\";\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\r\nconst SET_TOTAL_USERS_COUNT =\"SET_TOTAL_USERS_COUNT\";\r\nconst TOGGLE_IS_FETCHING =\"TOGGLE_IS_FETCHING\";\r\nconst FOLLOWING_IN_PROGRESS= \"FOLLOWING_IN_PROGRESS\";\r\n\r\nlet InitialState ={\r\nusers:[],\r\npageSize: 5,\r\ntotalUsersCount: 60,\r\ncurrentPage:1,\r\n    portionSize:10,\r\nisFetching : false,\r\nfollowProgress: []\r\n\r\n};\r\n\r\n\r\nlet usersReducer=(state = InitialState,action)=> {\r\n    switch (action.type) {\r\n        case FOLLOW:{\r\n            return{\r\n                ...state,\r\n                users: state.users.map(u=>{\r\n                    if(u.id===action.usersId){\r\n                        u={...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })\r\n\r\n            }\r\n        }\r\n        case UNFOLLOW:{\r\n            return{\r\n                ...state,\r\n                users: state.users.map(u=>{\r\n                    if(u.id===action.usersId){\r\n                        u={...u, followed: false}\r\n                    }\r\n                    return u;\r\n                })\r\n\r\n            }\r\n        }\r\n        case SET_USERS:{\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n        }\r\n        case SET_CURRENT_PAGE:{\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        }\r\n        case SET_TOTAL_USERS_COUNT:{\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.totalUsersCount\r\n            }\r\n        }\r\n        case TOGGLE_IS_FETCHING:{\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        }\r\n        case FOLLOWING_IN_PROGRESS:{\r\n            return {\r\n                ...state,\r\n                followProgress: action.isFetching?\r\n                    [...state.followProgress, action.userId]\r\n                    :  state.followProgress.filter(id=> id !== action.userId)\r\n\r\n\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n\r\nexport const followS=(usersId)=>{\r\n    return{type: FOLLOW, usersId}\r\n\r\n}\r\nexport const unfollowS=(usersId)=>{\r\n    return{type: UNFOLLOW, usersId}\r\n}\r\nexport const setUsers=(users)=>{\r\n    return{type: SET_USERS,users}\r\n}\r\nexport const setCurrentPage=(currentPage)=>{\r\n    return{type: SET_CURRENT_PAGE, currentPage}\r\n}\r\nexport const setTotalUsersCount=(totalUsersCount)=>{\r\n    return{type: SET_TOTAL_USERS_COUNT, totalUsersCount}\r\n}\r\nexport const setToggleFetching=(isFetching)=>{\r\n    return{type: TOGGLE_IS_FETCHING, isFetching}\r\n}\r\nexport const followingInProgress=(isFetching, userId)=>{\r\n    return{type: FOLLOWING_IN_PROGRESS, isFetching, userId}\r\n}\r\nexport const getUsers = (currentPage,pageSize) => {\r\n    return (dispatch) => {\r\n        dispatch(setCurrentPage(currentPage));\r\n        dispatch(setToggleFetching(true))\r\n        usersAPI.getUsers(currentPage, pageSize).then(data => {\r\n            dispatch(setToggleFetching(false))\r\n            dispatch(setUsers(data.items));\r\n            dispatch(setTotalUsersCount(data.totalCount));\r\n        });\r\n    }\r\n}\r\nexport const follow = (userId) =>{\r\n    return(dispatch) =>{\r\n        dispatch(followingInProgress(true,userId));\r\n        usersAPI.follow(userId)\r\n            .then(response => {\r\n                if(response.data.resultCode===0){\r\n                    dispatch(followS(userId));\r\n                }\r\n                dispatch(followingInProgress(false,userId));\r\n            });\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId) =>{\r\n    return(dispatch) =>{\r\n        dispatch(followingInProgress(true,userId));\r\n        usersAPI.unfollow(userId)\r\n            .then(response => {\r\n                if(response.data.resultCode===0){\r\n                    dispatch(unfollowS(userId));\r\n                }\r\n                dispatch(followingInProgress(false,userId));\r\n            });\r\n    }\r\n}\r\n\r\n\r\nexport default usersReducer;","import React, {useState} from \"react\";\r\nimport a from \"./Users.module.css\";\r\nimport userPhoto from \"../../datas/img/user.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nlet Users = (props,{portionSize=10}) => {\r\n    let totalPagesCount = Math.ceil(props.totalUsersCount/props.pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= totalPagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    let portionCount = Math.ceil(totalPagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1)\r\n    let leftBorder = (portionNumber - 1) * portionSize + 1;\r\n    let rightBorder = portionNumber * portionSize;\r\n    let newCurrentPage = (leftBorder)=>{\r\n        debugger;\r\n        props.onClickChanged(leftBorder+portionSize);\r\n    }\r\n    let prevCurrentPage = (leftBorder)=>{\r\n\r\n        props.onClickChanged(leftBorder-portionSize);\r\n    }\r\n\r\n    return  <div>\r\n        <div className={a.paginator}>\r\n        {portionNumber>1&& <button onClick={()=>{setPortionNumber(portionNumber-1);prevCurrentPage(leftBorder)}}>PREV</button>}\r\n        <div className={a.buttonsBlock}>\r\n            {\r\n                pages.filter(p=>p>=leftBorder && p<=rightBorder)\r\n                    .map(p=>\r\n<button  onClick={()=>props.onClickChanged(p)}\r\n        className={props.currentPage===p && a.selectedPage} key={p}>{p}\r\n</button>)\r\n            }\r\n\r\n        </div>\r\n        { portionCount > portionNumber &&\r\n        <button onClick={() => { setPortionNumber(portionNumber + 1);newCurrentPage(leftBorder) }}>NEXT</button>\r\n\r\n        }\r\n        </div>\r\n        {\r\n            props.users.map(u => <div key={u.id}>\r\n                <div className={a.Container}>\r\n                    <div>\r\n\r\n                        <div><NavLink to={\"/profile/\"+u.id}>\r\n                            <img alt={\"user's photo\"} className={a.userImg} src={u.photos.small != null ? u.photos.small : userPhoto}/>\r\n                        </NavLink>\r\n                        </div>\r\n                        <div>\r\n                            {\r\n                                u.followed\r\n                                    ? <button disabled={props.followProgress.some(id=> id===u.id)} onClick={() => {\r\n                                        props.unfollow(u.id);\r\n\r\n                                    }}> unfollow</button>\r\n                                    : <button disabled={props.followProgress.some(id=> id===u.id)}  onClick={() => {\r\n                                       props.follow(u.id);\r\n                                    }}>follow</button>\r\n\r\n                            }\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div>\r\n\r\n                        <div>{u.name}</div>\r\n                        <div><p> {u.status}</p></div>\r\n                    </div>\r\n                    <div> {\"u.location.city\"} <br/>\r\n                        {\"u.location.country\"}\r\n\r\n                    </div>\r\n                </div>\r\n            </div>)\r\n        }\r\n    </div>\r\n}\r\nexport default Users","import React from \"react\";\r\nimport prel from \"../../../datas/img/prel.gif\";\r\nimport style from \"./Preloader.module.css\";\r\nlet Preloader = (props)=>{\r\n    return  (<div>\r\n        <div className={style.preloaderConatiner}>\r\n        <img src={prel} className={style.preloader}/>\r\n        </div>\r\n        </div>)\r\n\r\n}\r\nexport default Preloader;","\r\nimport { createSelector } from 'reselect';\r\n\r\nconst getUsers = (state) =>{\r\n    return (state.UsersPage.users);\r\n};\r\n\r\nexport const getAllUsers = createSelector(getUsers,(users)=>{\r\n    return(users)\r\n});\r\nexport const getPageSize = (state)=>{\r\n    return (state.UsersPage.pageSize)\r\n};\r\nexport const getTotalUsersCount = (state)=>{\r\n    return(state.UsersPage.totalUsersCount)\r\n};\r\nexport const getCurrentPage = (state)=>{\r\n    return(state.UsersPage.currentPage)\r\n};\r\nexport const getIsFetching = (state)=>{\r\n    return(state.UsersPage.isFetching)\r\n};\r\nexport const getFollowProgress = (state)=>{\r\n    return(state.UsersPage.followProgress)\r\n};","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {} from \"../../redux/usersReducer\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {followingInProgress} from \"../../redux/usersReducer\";\r\nimport {follow} from \"../../redux/usersReducer\";\r\nimport {unfollow} from \"../../redux/usersReducer\";\r\nimport {getUsers} from \"../../redux/usersReducer\";\r\nimport {\r\n    getAllUsers,\r\n    getCurrentPage,\r\n    getFollowProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount\r\n} from \"../../redux/usersSelectors\";\r\n\r\nclass UsersContainer extends React.Component{\r\n\r\n    componentDidMount() {\r\n       this.props.getUsers(this.props.currentPage, this.props.pageSize)\r\n    }\r\n\r\n    onClickChanged = (currentPage) =>{\r\n        this.props.getUsers(currentPage, this.props.pageSize)\r\n\r\n    }\r\n\r\n    render() {\r\n        return <> {this.props.isFetching? <Preloader/>:<></>}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                      pageSize={this.props.pageSize}\r\n                      onClickChanged={this.onClickChanged}\r\n                      currentPage={this.props.currentPage}\r\n                      users={this.props.users}\r\n                      unfollow={this.props.unfollow}\r\n                      follow={this.props.follow}\r\n                   followingInProgress={this.props.followingInProgress}\r\n                   followProgress={this.props.followProgress}\r\n                   portionSize={this.props.portionSize}\r\n        > </Users>\r\n            </>\r\n    }\r\n}\r\nlet mapStateToProps = (state) =>{\r\n    return {\r\n       users: state.UsersPage.users,\r\n        pageSize: state.UsersPage.pageSize,\r\n        totalUsersCount:state.UsersPage.totalUsersCount,\r\n        currentPage:getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followProgress:getFollowProgress(state),\r\n        portionSize:state.UsersPage.portionSize\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,{followingInProgress,getUsers,follow,unfollow})(UsersContainer);\r\n\r\n\r\n","import style from \"./ProlifeStatus.module.css\"\r\nimport React from \"react\";\r\n\r\nclass ProfileStatus extends React.Component{\r\n    state={\r\n        editMode: false,\r\n        status:this.props.status\r\n    }\r\n\r\n    onStatusChange =(e)=>{\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n    })\r\n    };\r\n    ActivateEditMode=()=>{\r\n        this.setState({\r\n                editMode: true\r\n            }\r\n        )\r\n    }\r\n\r\n    DeactivateEditMode=()=>{\r\n        this.setState({\r\n                editMode: false\r\n        },\r\n            this.props.updateStatus(this.state.status)\r\n\r\n        )\r\n    }\r\ncomponentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps!==this.props) {\r\n            this.setState({\r\n                status: this.props.status\r\n            })\r\n        }\r\n}\r\n\r\n    render() {\r\n      return <div>\r\n          <div className={style.mainContainer}>\r\n              {!this.state.editMode&& <div>\r\n                  <span onDoubleClick={this.ActivateEditMode} className={style.statusText}>{this.props.status}</span>\r\n              </div>}\r\n              { this.state.editMode&&\r\n              <div>\r\n                  <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.DeactivateEditMode} value={this.state.status}/>\r\n              </div>}\r\n          </div>\r\n\r\n      </div>\r\n  }\r\n}\r\nexport default ProfileStatus;\r\n","import React, {useState} from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Element} from \"../../FormsControls/FormsControls\";\r\nimport styles from \"../../FormsControls/FormsControls.module.css\";\r\nimport s from './ProfileFormData.module.css'\r\n\r\nconst Input = Element(\"input\")\r\nconst ProfileDataForm = (props)=> {\r\n\r\n    return(\r\n        <div className={s.container}>\r\n\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div className={s.buttons}><div> <button className={s.btn} type={\"submit\"}>save</button></div>\r\n                <div> <button onClick={props.onCancel} className={s.btn}>cancel</button></div></div>\r\n\r\n            {(props.error)?<div className={styles.spanError}>{props.error}</div>:undefined}\r\n            About me: <Field type=\"text\" name=\"aboutMe\" placeholder=\"\" component={Input} />\r\n            Your fullname <Field type=\"text\" name=\"fullName\" placeholder=\"\" component={Input} />\r\n            Are you looking for a job? <Field type=\"checkbox\" name=\"lookingForAJob\" placeholder=\"\" component={Input} />\r\n            Please tell us about your skills  <Field type=\"text\" name=\"lookingForAJobDescription\" placeholder=\"\" component={Input} />\r\n            You in social networks\r\n            {Object.entries(props.profile.contacts).map(([key,value])=>{\r\n                return <Field type=\"text\" name={'contacts.'+key} placeholder={key} component={Input} key={key} />\r\n\r\n            })\r\n\r\n            }\r\n\r\n\r\n\r\n\r\n        </form>\r\n        </div>)\r\n}\r\nconst ProfileDataFormRedux = reduxForm(\r\n    {form:\"profileData\"}\r\n)(ProfileDataForm);\r\nexport default ProfileDataFormRedux;","import s from \"./ProfileInfo.module.css\";\r\nimport React, {useState} from \"react\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus/ProfileStatus\";\r\nimport ProfileDataForm from \"./ProfileFormData\";\r\nconst ProfileInfo =(props)=> {\r\n    const [editMode,setEditMode]= useState(false)\r\n\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    function onPhotoSelected(e) {\r\n        if (e.target.files.length) {\r\n            props.savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n    const Contact = ({contactTitle, contactValue})=>{\r\n        return<div> {contactTitle}:{contactValue}</div>\r\n    }\r\n\r\n    const onSubmit = (profileData)=>{\r\n        props.updateProfile(profileData)\r\n        setEditMode(false)\r\n    }\r\n    const onCancel = ()=>{\r\n        setEditMode(false)\r\n    }\r\n\r\n    const ProfileData = (props) =>{\r\n        return(    <div>\r\n            <p> About user: {props.profile.aboutMe} </p>\r\n            <p> Looking for a job: {props.profile.lookingForAJob===true?<span>yes</span>: <span>no</span>} </p>\r\n            <div>Description: {props.profile.lookingForAJobDescription===null?<p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Consequuntur corporis dolorum est eum ex inventore, ipsa laudantium minus nemo tempora.</p>:props.profile.lookingForAJobDescription}</div>\r\n            <div>\r\n\r\n                <p>Contacts:</p>\r\n                {  Object.entries(props.profile.contacts).map(([key,value])=>{\r\n                    return value?<Contact contactTitle={key} contactValue={value} key={key}/>:null\r\n                })\r\n\r\n                }\r\n\r\n            </div>{/*./Contacts*/}\r\n\r\n        </div>)\r\n    }\r\n\r\n    function onClick(editMode) {\r\n        return    setEditMode(true)\r\n    }\r\n\r\n    return(\r\n        <div >\r\n<div className={s.container}>\r\n<div className={s.box}>\r\n        <div className={s.background}>\r\n            {props.profile.photos.small==null?   <img src={\"https://i.pinimg.com/originals/a9/d0/96/a9d096ac9430a4f297ed99d42861ae9d.jpg\"} className={s.avatar}/>:  <img src={props.profile.photos.small } className={s.avatar}/>}\r\n            <div>  {!props.isOwner || props.isOwner===props.authorizedUserID? <input type={\"file\"} onChange={onPhotoSelected}/>:<></>}</div>\r\n            <div className={s.userName}>{props.profile.fullName}</div>\r\n        </div>\r\n\r\n    <div>\r\n       <ProfileStatus updateStatus={props.updateStatus}  status={props.status}/>\r\n    </div>\r\n    {editMode?<ProfileDataForm profile={props.profile} onSubmit={onSubmit} onCancel={props.onCancel}/>:<div><ProfileData profile={props.profile}/><button onClick={onClick} className={s.btn}>edit</button></div>}\r\n\r\n</div>\r\n\r\n        </div>\r\n\r\n    </div>);\r\n}\r\nexport default ProfileInfo;\r\n","import {ProfileAPI, usersAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\nconst ADD_POST = 'ADD_POST';\r\nconst ADD_LIKE =\"ADD_LIKE\";\r\n\r\nconst SET_USER_PROFILE='SET_USER_PROFILE';\r\nconst SET_PROFILE_STATUS='SET_PROFILE_STATUS';\r\nconst SAVE_PHOTO = 'SAVE_PHOTO'\r\nlet InitialState ={\r\n   profile: null,\r\n    status:null,\r\n    postData :[{massege:'Hello, sabaki! Ya naruto uzumaki', kartinka:'https://klike.net/uploads/posts/2019-03/1551511784_4.jpg', likes:201, id:1,liked:false},\r\n        {massege:'I wanna end me' ,kartinka:'https://klike.net/uploads/posts/2019-03/1551511784_4.jpg' ,likes:15,id:2,liked: false},\r\n        {massege:'Whats wrong with you?' ,kartinka:\"https://klike.net/uploads/posts/2019-03/1551511784_4.jpg\" ,likes:64,id:3,liked:false}],\r\n    buttonDef: \"like\"\r\n}\r\n\r\n\r\nlet profileReducer=(state = InitialState,action)=> {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n        {\r\n            let NewPost = {\r\n                massege: action.newPostText,\r\n                kartinka: \"https://klike.net/uploads/posts/2019-03/1551511784_4.jpg\",\r\n                likes: 12\r\n            };\r\n            return  {...state,\r\n                postData:[...state.postData,NewPost],\r\n            };\r\n        }\r\n        case ADD_LIKE:{\r\n            return {\r\n                ...state,\r\n                postData: state.postData.map(u=>{\r\n                    if(u.id===action.postId && u.liked=== false){\r\n                        u={...u, likes: u.likes + 1, liked: true}\r\n                    }\r\n                    else if(u.id===action.postId && u.liked=== true){\r\n                        u={...u, likes: u.likes - 1, liked: false}\r\n                    }\r\n                    return u;\r\n                })\r\n\r\n            }\r\n            }\r\n        case SET_USER_PROFILE:{\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        }\r\n        case SET_PROFILE_STATUS:{\r\n           return {\r\n               ...state,\r\n               status: action.status\r\n           }\r\n        }\r\n        case SAVE_PHOTO:{\r\n            return {\r\n                ...state,\r\n                profile: {...state.profile, photos: action.photos}\r\n            }\r\n        }\r\n\r\n\r\n        default: return state;\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport const addPostActionCreator=(newPostText)=>{\r\n    return{type: ADD_POST,newPostText}\r\n\r\n}\r\nexport const addLikeAC = (postId) =>{\r\n    return{type:ADD_LIKE, postId }\r\n}\r\nexport const setUserProfile = (profile)=>{\r\n    return{type:SET_USER_PROFILE, profile}\r\n}\r\nexport const getUserProfile = (userId) =>{\r\n   return (dispatch)=>{\r\n       usersAPI.setProfile(userId).then(response => {\r\n          dispatch(setUserProfile(response.data));\r\n       });\r\n    }\r\n}\r\nexport const setProfileStatus =(status)=>{\r\n    return{type: SET_PROFILE_STATUS, status }\r\n\r\n}\r\nexport const savePhotoSuccess = (photos)=>{\r\n    return{type:SAVE_PHOTO, photos}\r\n}\r\nexport const getProfileStatus = (userId) =>{\r\n    return(dispatch)=>{\r\n        ProfileAPI.getStatus(userId).then(response=>{\r\n            dispatch(setProfileStatus(response.data))\r\n        })\r\n    }\r\n}\r\nexport const updateStatus =(status)=>{\r\n    return(dispatch)=>{\r\n        ProfileAPI.updateStatus(status).then(response=>{\r\n            if(response.data.resultCode===0){\r\n                dispatch(setProfileStatus(status))\r\n            }\r\n        })\r\n    }\r\n}\r\nexport const savePhoto =(file)=> (dispatch)=> {\r\n        ProfileAPI.savePhoto(file).then(response =>{\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(savePhotoSuccess(response.data.data.photos))\r\n        }})\r\n\r\n}\r\nexport const updateProfile =(profile)=>{\r\n    return(dispatch,getState)=>{\r\n        const userId = getState().auth.id\r\n        ProfileAPI.updateProfile(profile).then(response=>{\r\n            if(response.data.resultCode===0){\r\n                dispatch(getUserProfile(userId))\r\n            }\r\n            else {\r\n                const message = (response.data.messages.length>0)? response.data.messages[0]: \"Something wrong\"\r\n                dispatch(stopSubmit(\"profileData\",{_error:message}));\r\n            }\r\n        })\r\n    }\r\n}\r\nexport default profileReducer;","import React from 'react';\r\nimport a from './Post.module.css';\r\n\r\nconst  Post= (props) => {\r\n\r\n    return (\r\n        props.postData.map(u => <div key={u.id}>\r\n\r\n        <div className={a.item}>\r\n\r\n            <div className={a.container}>\r\n            <div className={a.avatar}>\r\n            <img src={u.kartinka}/>\r\n            </div>\r\n            <div>\r\n            {u.massege}\r\n            </div>\r\n            </div>\r\n            <span>\r\n               {u.likes} likes <button className={a.shareButton} onClick={() => {\r\n                props.addLike(u.id)\r\n            }}>\r\n                {u.liked\r\n                    ? <i className=\"fas fa-heart\"> </i>\r\n                    :<i className=\"far fa-heart\"> </i>\r\n                }\r\n\r\n                \r\n                </button>\r\n            </span>\r\n\r\n    </div>\r\n            </div>\r\n         ));\r\n}\r\nexport default Post;\r\n","import React from 'react';\r\nimport a from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\n\r\nimport {Element} from '../../FormsControls/FormsControls';\r\nconst Textarea = Element('textarea')\r\n\r\nconst maxLength = max => value =>\r\n    value && value.length > max ? `Must be ${max} characters or less` : undefined\r\nconst maxLength30 = maxLength(30);\r\n\r\nconst MyPosts = (props) => {\r\n    let addingPost = (value) => {\r\n        props.addPost(value.newPostText);\r\n    };\r\n    return (\r\n\r\n        <div className={a.container}>\r\n            <div className={a.newPost}>\r\n                <div className={a.myPost}>\r\n                    My posts\r\n                </div>\r\n                <AddPostRedux onSubmit={addingPost}/>\r\n            </div>\r\n            <div className={a.posts}>\r\n                <Post\r\n                    postData={props.postData}\r\n                    addLike={props.addLike}\r\n                    buttonDef={props.buttonDef}\r\n                    profile={props.profile}\r\n                />\r\n            </div>\r\n        </div>);\r\n}\r\n\r\nlet AddPost = (props)=>{\r\n\r\n    return(<form onSubmit={props.handleSubmit}>\r\n            <Field validate={[ maxLength30]} name={\"newPostText\"} component={Textarea}  className={a.textarea}/>\r\n            <button type={\"submit\"} className={a.shareButton}>Submit </button>\r\n    </form>)\r\n};\r\nlet AddPostRedux = reduxForm({form:\"addPost\"})(AddPost);\r\n\r\nexport default MyPosts;\r\n","import React from 'react';\r\nimport {addLikeAC, addPostActionCreator} from \"../../../redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) =>{\r\n   return {\r\n\r\n       postData: state.ProfilePage.postData,\r\n       newPostText:state.ProfilePage.newPostText,\r\n       buttonDef:state.ProfilePage.buttonDef,\r\n      profile:state.ProfilePage.profile\r\n   }\r\n}\r\nconst MyPostsContainer = connect(mapStateToProps,{addPost:addPostActionCreator, addLike:addLikeAC})(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React from 'react';\r\nimport a from './ProfileCom.module.css';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./My posts/MyPostsContainer\";\r\n\r\nconst ProfileCom = (props) => {\r\n    debugger\r\n    return (\r\n        <div className={a.container}>\r\n            <ProfileInfo profile={props.profile} status={props.status}\r\n                         updateStatus={props.updateStatus} authorizedUserID={props.authorizedUserID}\r\n                         savePhoto={props.savePhoto} updateProfile={props.updateProfile} isOwner={props.isOwner}/>\r\n            <MyPostsContainer/>\r\n\r\n        </div>);\r\n}\r\nexport default ProfileCom;\r\n","import React from 'react';\r\nimport ProfileCom from \"./ProfileCom\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {getProfileStatus, getUserProfile, savePhoto, updateProfile, updateStatus} from \"../../redux/profileReducer\";\r\nimport withAuthRedirect from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileComContainer extends React.Component{\r\nconstructor(props) {\r\n\r\n    super(props);\r\n}\r\nrefreshProfile(){\r\n    let userId = this.props.match.params.userId;\r\n    if(!userId){\r\n        userId = this.props.authorizedUserID;\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getProfileStatus(userId);\r\n\r\n}\r\n    componentDidMount() {\r\n\r\n        this.refreshProfile()\r\n}\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(this.props.match.params.userId !== prevProps.match.params.userId){\r\n            this.refreshProfile();}\r\n    }\r\n\r\n    render() {\r\n    debugger\r\n        return(<ProfileCom savePhoto={this.props.savePhoto}  profile={this.props.profile} status={this.props.status}\r\n                           updateStatus={this.props.updateStatus} authorizedUserID={this.props.authorizedUserID}\r\n                           updateProfile={this.props.updateProfile} isOwner={this.props.match.params.userId}/>)\r\n    }\r\n}\r\nlet mapStateToProps =(state) =>{\r\n    return {\r\n        profile: state.ProfilePage.profile,\r\n        status:state.ProfilePage.status,\r\n        authorizedUserID:state.auth.id\r\n    }\r\n}\r\n export default compose(\r\n     connect (mapStateToProps,{getUserProfile,getProfileStatus,updateStatus,savePhoto,updateProfile}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileComContainer)","import React from 'react';\r\nimport s from './Header.module.css';\r\n\r\nfunction Header(props) {\r\n\r\n\r\n    return (\r\n\r\n\r\n        <header className={s.Header}>\r\n        <div className={s.headerContainer}>\r\n            <div className={s.logoContainer}>\r\n                <div><img\r\n                    src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/4/4a/Inkscape.logo.svg/390px-Inkscape.logo.svg.png\"/>\r\n                </div>\r\n                <div className={s.nameLogo}>Keetouch</div>\r\n            </div>\r\n\r\n        </div>\r\n    </header>);\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport { logout,} from \"../../redux/auth-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {getUserProfile} from \"../../redux/profileReducer\";\r\n\r\nclass HeaderContainer extends React.Component{\r\n    render() {\r\n        return(<Header {...this.props}/>)\r\n    }\r\n}\r\nlet mapStateToProps =(state) =>{\r\n    return {\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n    profile: state.ProfilePage.profile,\r\n        id: state.auth.id\r\n    }\r\n}\r\nexport default  connect(mapStateToProps,{logout,getUserProfile}) (HeaderContainer);\r\n","import React from \"react\";\r\nimport style from \"./LoginPage.module.css\"\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Element} from \"../FormsControls/FormsControls\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport styles from \"./../FormsControls/FormsControls.module.css\"\r\nimport s from './LoginPage.module.css'\r\nimport classNames from 'classnames'\r\nconst Input = Element(\"input\")\r\nexport const required = (value) => (value  ?  undefined : 'Required');\r\nconst Loginpage = (props) =>{\r\n    let onSubmit = (value)=>{\r\n        props.login(value.email,value.password,value.rememberMe, value.captcha)\r\n    }\r\n    if (props.isAuth){\r\n        return (\r\n            <Redirect to={\"/profile\"}/>\r\n        )\r\n    }\r\n    return(<div>\r\n        <div className={style.textContainer}>\r\n           <div><p className={style.loginText}> LOGIN</p></div>\r\n            <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}/>\r\n</div>\r\n    </div>)\r\n};\r\nconst LoginForm = (props) =>{\r\n    return(\r\n        <form onSubmit={props.handleSubmit}>\r\n        <Field type=\"login\" name=\"email\" placeholder=\"your login\" component={Input} validate={ required }/>\r\n        <Field type=\"password\" name=\"password\" placeholder=\"your password\" component={Input} validate={ required }/>\r\n        <Field type=\"checkbox\" name=\"rememberMe\" component={\"input\"}/> remember me\r\n            {(props.error)?<div className={styles.spanError}>{props.error}</div>:<></>}\r\n            {props.captchaUrl && <div><img src={props.captchaUrl} alt={\"captcha\"}/><div><Field type=\"text\" name=\"captcha\" placeholder={\"enter symbols what you see\"} component={\"input\"}/></div> </div>}\r\n        <button type=\"submit\" className={buttonClasses }>Submit</button>\r\n    </form>)\r\n};\r\nconst buttonClasses = classNames(s.btn,s.btnSpecial)\r\nconst LoginReduxForm = reduxForm({\r\n    form: \"login\"\r\n})(LoginForm);\r\nconst mapStateToProps =(state)=>{\r\n    return{\r\n        isAuth:state.auth.isAuth,\r\n        captchaUrl: state.auth.captchaUrl\r\n    }\r\n}\r\nexport default connect(mapStateToProps,{login}) (Loginpage);","import {getUserAuthData} from \"./auth-reducer\";\r\nconst INITIALIZE_DONE = 'INITIALIZE_DONE';\r\n\r\nlet InitialState ={\r\n    initialized:false\r\n};\r\n\r\nlet appReducer =(state = InitialState,action)=> {\r\n    switch (action.type) {\r\n        case INITIALIZE_DONE:{\r\n            return  {...state,\r\n                initialized:true\r\n            };\r\n        }\r\n        default: return state;\r\n    }\r\n};\r\nexport let initialize = ()=>{\r\n    return{\r\n        type:INITIALIZE_DONE\r\n    }\r\n};\r\nexport const initializeApp = () => (dispatch)=>{\r\nconst promise = dispatch(getUserAuthData());\r\n//const promiseTheme = dispatch(getTheme());\r\nPromise.all([promise]).then(()=>{\r\n    dispatch(initialize())\r\n})\r\n    }\r\n\r\n\r\nexport default appReducer;\r\n\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport dialogsReducer from \"./dialogsReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {reducer as formReducer} from \"redux-form\";\r\nimport appReducer from \"./appReducer\";\r\n\r\nlet reducers = combineReducers(\r\n    {ProfilePage:profileReducer,\r\n             MassagePage:dialogsReducer,\r\n             UsersPage: usersReducer,\r\n             auth:authReducer,\r\n             form: formReducer,\r\n             appCommon: appReducer\r\n    }\r\n    );\r\nlet store = createStore(reducers,applyMiddleware(thunkMiddleware));\r\nwindow.store = store;\r\nexport default store;","import React from \"react\";\r\nimport s from './Footer.module.css'\r\n\r\nconst Footer = (props)=>{\r\n    return(<div>\r\n        <div className={s.footerContainer}>\r\n        <div className={s.authorInfo}>\r\n            site design / logo © 2020 Igor Selin; All rights aren't received\r\n        </div>\r\n        </div>\r\n    </div>)\r\n}\r\nexport default Footer","import React from 'react';\r\nimport s from './Setting.module.css'\r\n\r\nconst Setting = ()=> {\r\n    return (\r\n        <div className={s.settingsContainer}>\r\n            <div> In processing</div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default Setting;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Nav from \"./contonents/Havbar/Nav\";\r\nimport  {BrowserRouter, Route} from \"react-router-dom\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport  {withRouter} from \"react-router-dom\";\r\nimport Music from \"./contonents/Music/Music\";\r\nimport MassegesContainer from \"./contonents/Masseges/MassegesContainer\";\r\nimport UsersContainer from \"./contonents/Users/UsersContainer\";\r\nimport ProfileComContainer from \"./contonents/ProfileCom/ProfileComContainer\";\r\nimport HeaderContainer from \"./contonents/Header/HeaderContainer\";\r\nimport LoginPage from \"./contonents/login/Loginpage\";\r\nimport {connect, Provider} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {initializeApp} from \"./redux/appReducer\";\r\nimport Preloader from \"./contonents/common/Preloader/Preloader\";\r\nimport store from \"./redux/redux-store\";\r\nimport Footer from \"./contonents/Footer/Footer\";\r\nimport Setting from \"./contonents/Setting/Setting\";\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n    }\r\n    render() {\r\n        if(!this.props.initialized){\r\n            return <Preloader/>\r\n        }\r\n        return (\r\n            <div className=\"app-wrapper\">\r\n\r\n                <HeaderContainer/>\r\n                <Nav/>\r\n                <div className=\"app-wrapper-content\">\r\n                    <Route exact path={\"/\"} render={() => <Redirect to={\"/profile\"}/>}/>\r\n                    <Route path={\"/profile/:userId?\"} render={() => <ProfileComContainer/>}/>\r\n                    <Route path='/messages' render={() => <MassegesContainer/>}/>\r\n                    <Route path='/users' render={() => <UsersContainer/>}/>\r\n                    <Route path=\"/music\" component={Music}/>\r\n                    <Route path='/login' render={() => <LoginPage/>}/>\r\n                    <Route path='/setting' render={()=><Setting/>}/>\r\n                </div>\r\n                <Footer/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps =(state)=>({\r\n    initialized: state.appCommon.initialized,\r\n})\r\n\r\nconst AppContainer = compose(\r\n    withRouter,\r\nconnect(mapStateToProps,{initializeApp})) (App);\r\nconst MainApp = ()=>{\r\n    return(<BrowserRouter>\r\n        <link rel=\"stylesheet\" href=\"https://use.fontawesome.com/releases/v5.6.1/css/all.css\"\r\n              integrity=\"sha384-gfdkjb5BdAXd+lj+gudLWI+BXq4IuLW5IT+brZEZsLFm++aCMlF1V92rMkPaX4PP\"\r\n              crossOrigin=\"anonymous\"/>\r\n        <link href=\"https://fonts.googleapis.com/css2?family=Lato:ital,wght@0,300;0,400;0,700;1,300;1,400;1,700&family=Notable&family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,300;1,400;1,500;1,700;1,900&display=swap\" rel=\"stylesheet\"/>\r\n        <Provider store={store}>\r\n            <AppContainer/>\r\n        </Provider> </BrowserRouter>)\r\n}\r\nexport default MainApp","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport MainApp from \"./App\";\r\n\r\n\r\nReactDOM.render(<MainApp/>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ProfileInfo_container__1_p0L\",\"background\":\"ProfileInfo_background__3w3Tb\",\"avatar\":\"ProfileInfo_avatar__94gwH\",\"userName\":\"ProfileInfo_userName__dvTmu\",\"btn\":\"ProfileInfo_btn__2Ur7K\",\"bnt\":\"ProfileInfo_bnt__1ggGH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"FormsControls_error__2VFQj\",\"spanError\":\"FormsControls_spanError__1Mq62\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainMessages\":\"Masseges_mainMessages__3kc2j\",\"dialogsItem\":\"Masseges_dialogsItem__pJwvL\",\"inputMassage\":\"Masseges_inputMassage__1hFte\",\"textarea\":\"Masseges_textarea__36MHu\",\"dialogs\":\"Masseges_dialogs__3AtMl\",\"shareButton\":\"Masseges_shareButton__2rtqU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"DialogItem_dialogs__j5aoV\",\"photo\":\"DialogItem_photo__1ZyNr\",\"kartinka\":\"DialogItem_kartinka__38DFl\",\"nameDialog\":\"DialogItem_nameDialog__20G0F\",\"active\":\"DialogItem_active__1bIbB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"MyPosts_container__1KYtV\",\"textarea\":\"MyPosts_textarea__3jVek\",\"myPost\":\"MyPosts_myPost__3qUC0\",\"shareButton\":\"MyPosts_shareButton__3Puxw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginText\":\"LoginPage_loginText__2cd9n\",\"textContainer\":\"LoginPage_textContainer__1RMw2\",\"btn\":\"LoginPage_btn__1s6sA\",\"btnSpecial\":\"LoginPage_btnSpecial__hjrYd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userImg\":\"Users_userImg__3Ymve\",\"Container\":\"Users_Container__IdwkY\",\"selectedPage\":\"Users_selectedPage__3egL6\",\"buttonsBlock\":\"Users_buttonsBlock__2Tp75\",\"paginator\":\"Users_paginator__QbDXh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttons\":\"ProfileFormData_buttons__3OnP2\",\"container\":\"ProfileFormData_container__ZVVt5\",\"btn\":\"ProfileFormData_btn__FIfGe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__vBCga\",\"container\":\"Post_container__35QhF\",\"avatar\":\"Post_avatar__1ydsm\",\"shareButton\":\"Post_shareButton__bNwaU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__1491N\",\"logoContainer\":\"Header_logoContainer__342c1\",\"nameLogo\":\"Header_nameLogo__1EBMh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__1eGGW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"ProlifeStatus_mainContainer__p1Ia7\",\"statusText\":\"ProlifeStatus_statusText__yTgLM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footerContainer\":\"Footer_footerContainer__kQuAF\",\"authorInfo\":\"Footer_authorInfo__2onlG\"};"],"sourceRoot":""}