{"version":3,"sources":["datas/img/user.png","datas/img/prel.gif","contonents/ProfileCom/ProfileCom.module.css","validators/validators","contonents/Havbar/Nav.module.css","serviceWorker.js","contonents/Masseges/Masseges.js","contonents/Havbar/Nav.jsx","contonents/Music/Music.js","redux/dialogsReducer.js","contonents/Masseges/DialogItem/DialogItem.js","contonents/Masseges/MassegeItem/MassegeItem.js","contonents/FormsControls/FormsControls.js","hoc/withAuthRedirect.js","contonents/Masseges/MassegesContainer.js","api/api.js","redux/usersReducer.js","contonents/Users/Users.jsx","contonents/common/Preloader/Preloader.jsx","redux/usersSelectors.js","contonents/Users/UsersContainer.jsx","contonents/ProfileCom/ProfileInfo/ProfileStatus/ProfileStatus.jsx","contonents/ProfileCom/ProfileInfo/ProfileFormData.jsx","contonents/ProfileCom/ProfileInfo/ProfileInfo.js","redux/profileReducer.js","contonents/ProfileCom/My posts/Post/Post.jsx","contonents/ProfileCom/My posts/MyPosts.jsx","contonents/ProfileCom/My posts/MyPostsContainer.jsx","contonents/ProfileCom/ProfileCom.jsx","contonents/ProfileCom/ProfileComContainer.jsx","contonents/Header/Header.js","redux/auth-reducer.js","contonents/Header/HeaderContainer.jsx","contonents/login/Loginpage.js","redux/appReducer.js","redux/redux-store.js","App.js","index.js","contonents/FormsControls/FormsControls.module.css","contonents/Masseges/Masseges.module.css","contonents/Masseges/DialogItem/DialogItem.module.css","contonents/ProfileCom/ProfileInfo/ProfileInfo.module.css","contonents/ProfileCom/My posts/MyPosts.module.css","contonents/Header/Header.module.css","contonents/Users/Users.module.css","contonents/ProfileCom/My posts/Post/Post.module.css","contonents/common/Preloader/Preloader.module.css","contonents/ProfileCom/ProfileInfo/ProfileStatus/ProlifeStatus.module.css","contonents/login/LoginPage.module.css"],"names":["module","exports","Boolean","window","location","hostname","match","max","Nav","className","s","topNav","to","nav","activeClassName","active","Music","InitialState","masseges","text","dialogs","name","id","kartinka","dialogsReducer","state","action","type","stateCopy","NewSms","newMassage","push","DialogItem","props","path","photo","src","nameDialog","MessageItem","Element","input","meta","hasError","touched","error","styles","spanError","Textarea","maxLength50","value","length","AddReduxMassage","reduxForm","form","onSubmit","handleSubmit","Field","textarea","component","validate","shareButton","Masseges","MassegesElements","dialogsPage","map","massege","DislogsElemets","dialog","inputMassage","values","sendSms","newMassegeBody","mapStateToPropsForRedirect","isAuth","auth","withAuthRedirect","Component","connect","compose","MassagePage","dispatch","sendSmsActionCreator","instance","axios","withCredentials","baseURL","headers","usersAPI","currentPage","pageSize","get","then","response","data","userId","post","delete","authAPI","email","password","rememberMe","captcha","ProfileAPI","status","put","photos","formData","FormData","append","profile","SecurityAPI","users","totalUsersCount","portionSize","isFetching","followProgress","setToggleFetching","followingInProgress","usersReducer","u","usersId","followed","filter","Users","totalPagesCount","Math","ceil","pages","i","portionCount","useState","portionNumber","setPortionNumber","leftBorder","rightBorder","a","paginator","onClick","onClickChanged","prevCurrentPage","buttonsBlock","p","selectedPage","key","newCurrentPage","Container","alt","userImg","small","userPhoto","disabled","some","unfollow","follow","Preloader","style","preloaderConatiner","prel","preloader","getCurrentPage","createSelector","UsersPage","getIsFetching","getFollowProgress","UsersContainer","getUsers","this","React","setCurrentPage","items","totalCount","resultCode","ProfileStatus","editMode","onStatusChange","e","setState","currentTarget","ActivateEditMode","DeactivateEditMode","updateStatus","prevProps","prevState","snapshot","mainContainer","onDoubleClick","statusText","onChange","autoFocus","onBlur","Input","ProfileDataFormRedux","undefined","placeholder","required","Object","entries","contacts","ProfileInfo","setEditMode","Contact","contactTitle","contactValue","ProfileData","aboutMe","lookingForAJob","lookingForAJobDescription","conteiner","background","avatar","authorizedUserID","target","files","savePhoto","userName","fullName","profileData","updateProfile","line","postData","likes","liked","buttonDef","getUserProfile","setProfileStatus","profileReducer","NewPost","newPostText","postId","Post","item","container","addLike","class","maxLength30","maxLength","MyPosts","memo","console","log","MainConteiner","newPost","myPost","AddPostRedux","addPost","posts","MyPostsContainer","ProfilePage","ProfileCom","content","ProfileComContainer","params","getProfileStatus","refreshProfile","file","getState","message","messages","stopSubmit","_error","withRouter","Header","headerContainer","logoConteiner","nameLogo","authBlock","nameWithExit","login","logout","captchaUrl","setUserAuthData","getUserAuthData","getCaptchaUrl","url","setCaptchaSuccess","authReducer","HeaderContainer","LoginReduxForm","textContainer","loginText","initialized","appReducer","reducers","combineReducers","formReducer","appCommon","store","createStore","applyMiddleware","thunkMiddleware","App","initializeApp","render","MassegesContainer","AppContainer","promise","Promise","all","MainApp","rel","href","integrity","crossOrigin","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.ec2c3e0c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/user.83bd44a6.png\";","module.exports = __webpack_public_path__ + \"static/media/prel.6e5d6096.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ProfileCom_content__2T3WN\"};","module.exports = __webpack_public_path__ + \"static/media/validators.4f0bc9af.bin\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Nav\":\"Nav_Nav__2j3RX\",\"nav\":\"Nav_nav__1dzm6\",\"active\":\"Nav_active__3IDcM\",\"topNav\":\"Nav_topNav__1q2nJ\"};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport s from './Masseges.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport MessageItem from \"./MassegeItem/MassegeItem\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Element} from \"../FormsControls/FormsControls\";\r\nconst Textarea = Element(\"textarea\");\r\nconst maxLength = (max) =>\r\n    (value)=> {\r\n        if(value && value.length > max) return `Must be ${max} characters or less`\r\n        return undefined}\r\nconst maxLength50 = maxLength(50)\r\nconst Masseges = (props)=> {\r\n    let addNewMassage = (values) =>{\r\n    props.sendSms(values.newMassegeBody);\r\n    };\r\n    let MassegesElements = props.dialogsPage.masseges.map((massege)=> <MessageItem text={massege.text}/>) ;\r\n    let DislogsElemets = props.dialogsPage.dialogs.map((dialog)=> <DialogItem name={dialog.name} id={dialog.id} kartinka={dialog.kartinka}/> );\r\n    return (<div className={s[\"mainMasseges\"]}>\r\n        <div className={s[\"dialogsItem\"]}>\r\n            {DislogsElemets}\r\n        </div>\r\n        <div className={s.dialogs}>\r\n            {MassegesElements}\r\n            <div className={s.inputMassage}>\r\n     <AddReduxMassage onSubmit={addNewMassage} />\r\n            </div>\r\n        </div>\r\n        </div>\r\n        );\r\n        }\r\nconst AddMassage =(props)=>{\r\n    return(       <form onSubmit={props.handleSubmit}>\r\n        <Field className={s.textarea} component={Textarea} validate={[maxLength50]} name={\"newMassegeBody\"} />\r\n        <div>\r\n            <button type=\"submit\" className={s.shareButton}> Send</button>\r\n\r\n        </div>\r\n    </form>)\r\n}\r\n        const AddReduxMassage = reduxForm({form:\"addMassage\"})(AddMassage)\r\n\r\n        export default Masseges;\r\n","import React from 'react';\r\nimport s from './Nav.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nconst Nav = ()=> {\r\n    return (<div className={s.Nav}>\r\n        <div className={s.topNav}>\r\n            <div>\r\n                <NavLink to=\"/profile\" className={s.nav}  activeClassName={s.active}>Profile</NavLink>\r\n\r\n                <NavLink to=\"/messages\"  className={s.nav} activeClassName={s.active} >Messages</NavLink>\r\n\r\n                <NavLink to=\"/music\"  className={s.nav} activeClassName={s.active} >Music</NavLink>\r\n\r\n                <NavLink to=\"/users\"  className={s.nav} activeClassName={s.active}> Users</NavLink>\r\n\r\n                <NavLink to=\"/setting\"  className={s.nav} activeClassName={s.active}> Setting</NavLink>\r\n            </div>\r\n        </div>\r\n        </div>);}\r\n        export default Nav;\r\n","import React from 'react';\r\nimport s from './Music.module.css';\r\n\r\n\r\nconst Music = ()=> {\r\n    return (\r\n        <div>\r\n       Music\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default Music;\r\n","\r\nconst ADD_SMS = \"ADD_SMS\";\r\nlet InitialState ={\r\n    masseges :[{text:'Hi there'},{text:'What Am I doing wrong?'},{text:'Nothing. Cant get it'},{text:'Okey'}],\r\n    dialogs :[{name:\"Igor\", id:1, kartinka:\"https://i.pinimg.com/736x/c9/eb/dd/c9ebddca44e1b308c672e641af252be5.jpg\"},\r\n        {name:\"Nestor\", id:2,kartinka:\"https://avatarko.ru/img/kartinka/33/multfilm_lyagushka_32117.jpg\"},\r\n        {name:\"Marta\" ,id:3,kartinka:\"https://hahadu.ru/wp-content/uploads/2019/07/3-20.jpg\"},\r\n        {name:\"Oleg\", id:4,kartinka:\"https://focus.ua/storage/pub/images/2017/2615387.jpg\"}]\r\n\r\n}\r\n\r\nlet dialogsReducer=(state = InitialState,action)=>{\r\nswitch (action.type) {\r\n    case ADD_SMS: {\r\n        let stateCopy = {...state,\r\n            masseges:[...state.masseges]};\r\n\r\n        let NewSms = {\r\n            text: action.newMassage\r\n        };\r\n        stateCopy.masseges.push(NewSms);\r\n        return stateCopy;\r\n    }\r\n    default: return state;\r\n}\r\n\r\n\r\n}\r\n\r\n\r\nexport let sendSmsActionCreator=(newMassage)=>{\r\n    return{type: ADD_SMS, newMassage}\r\n};\r\n\r\nexport default dialogsReducer;\r\n\r\n","import React from 'react';\r\nimport s from './DialogItem.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nconst DialogItem = (props)=>{\r\n    let path='/Masseges/' + props.id;\r\n    return(\r\n        <div className={s.dialogs}>\r\n            <div className={s.photo}><img  src={props.kartinka} className={s.kartinka}/></div>\r\n            <div className={s.nameDialog}><NavLink to={path} activeClassName= {s.active} className={s.nameDialog} >{props.name}</NavLink>\r\n            </div>\r\n        </div>);\r\n}\r\n        export default DialogItem;\r\n","import React from 'react';\r\nimport s from './MassegesItem.module.css';\r\n\r\nconst MessageItem =(props)=>{\r\n    return( <div> {props.text}</div>);\r\n}\r\n        export default MessageItem;\r\n","import React from \"react\";\r\nimport styles from \"./FormsControls.module.css\"\r\n\r\nexport const Element = (Element) =>({input,meta,...props})=>{\r\n    const hasError = meta.touched && meta.error\r\n    return(\r\n        <div>\r\n            <div >\r\n        <Element {...input} {...props} className={hasError && styles.error}/>\r\n            </div>\r\n            {hasError && <span className={styles.spanError}>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state)=>{\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nlet withAuthRedirect = (Component)=>{\r\n    let RedirectComponent =(props)=>{\r\n        if(!props.isAuth) return <Redirect to='/login'/>\r\n    return(<Component {...props}/>)\r\n    }\r\n   return connect(mapStateToPropsForRedirect,{})(RedirectComponent);\r\n}\r\nexport default withAuthRedirect;","import React from 'react';\r\n\r\nimport {sendSmsActionCreator} from \"../../redux/dialogsReducer\";\r\nimport Masseges from \"./Masseges\";\r\nimport {connect} from \"react-redux\";\r\nimport withAuthRedirect from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        dialogsPage:state.MassagePage,\r\n\r\n    }\r\n};\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return {\r\n        sendSms:(newMassage)=>{dispatch(sendSmsActionCreator(newMassage))},\r\n\r\n\r\n    }\r\n};\r\nexport default compose(\r\n    connect(mapStateToProps,mapDispatchToProps),\r\n    withAuthRedirect\r\n)\r\n(Masseges);\r\n","import * as axios from \"axios\";\r\n\r\n     const instance = axios.create(\r\n         {\r\n             withCredentials: true,\r\n             baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n             headers:{\r\n                 \"API-KEY\":\"14afbc17-5def-47a5-befe-a2e4e52003d8\",\r\n\r\n             }\r\n         }\r\n     )\r\n\r\n\r\nexport const usersAPI = {\r\n         getUsers(currentPage=1,pageSize=5){\r\n             return instance.get(`users?page=${currentPage}&count=${pageSize}`).then(response => {\r\n                 return response.data\r\n             });\r\n         },\r\n         follow(userId){\r\n            return  instance.post(`follow/${userId}`)\r\n\r\n         },\r\n         unfollow(userId){\r\n          return  instance.delete(`follow/${userId}`)\r\n         },\r\n         setProfile(userId){\r\n            return  instance.get(`profile/${userId}`)\r\n         }\r\n         }\r\n\r\nexport const authAPI = {\r\n   authme(){\r\n      return  instance.get(`auth/me`)\r\n   },\r\n    login(email,password,rememberMe, captcha=null){\r\n        return instance.post(`/auth/login`, {email,password,rememberMe,captcha})\r\n    },\r\n    logout(){\r\n       return instance.delete(`/auth/login`)\r\n    }\r\n     }\r\n\r\nexport const ProfileAPI = {\r\n        getStatus(userId){\r\n            return  instance.get(`profile/status/`+ userId)\r\n        },\r\n        updateStatus(status){\r\n            return  instance.put(`profile/status/`,{status})\r\n        },\r\n    savePhoto(photos){\r\n        const formData = new FormData();\r\n        formData.append('image',photos)\r\n            return instance.put(`profile/photo`,formData,{\r\n                headers: {\r\n                    'content-type': 'multipart/form-data'\r\n                }\r\n            })\r\n    },\r\n    updateProfile(profile){\r\n        return  instance.put(`profile`,profile)\r\n    }\r\n\r\n\r\n}\r\nexport const SecurityAPI = {\r\n         getCaptcha(){\r\n             return instance.get(`security/get-captcha-url`);\r\n         }\r\n}\r\n\r\n\r\n\r\n\r\n","import {usersAPI} from \"../api/api\";\r\n\r\nconst FOLLOW = \"FOLLOW\";\r\nconst UNFOLLOW = \"UNFOLLOW\";\r\nconst SET_USERS = \"SET_USERS\";\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\r\nconst SET_TOTAL_USERS_COUNT =\"SET_TOTAL_USERS_COUNT\";\r\nconst TOGGLE_IS_FETCHING =\"TOGGLE_IS_FETCHING\";\r\nconst FOLLOWING_IN_PROGRESS= \"FOLLOWING_IN_PROGRESS\";\r\n\r\nlet InitialState ={\r\nusers:[],\r\npageSize: 5,\r\ntotalUsersCount: 60,\r\ncurrentPage:1,\r\n    portionSize:10,\r\nisFetching : false,\r\nfollowProgress: []\r\n\r\n};\r\n\r\n\r\nlet usersReducer=(state = InitialState,action)=> {\r\n    switch (action.type) {\r\n        case FOLLOW:{\r\n            return{\r\n                ...state,\r\n                users: state.users.map(u=>{\r\n                    if(u.id===action.usersId){\r\n                        u={...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })\r\n\r\n            }\r\n        }\r\n        case UNFOLLOW:{\r\n            return{\r\n                ...state,\r\n                users: state.users.map(u=>{\r\n                    if(u.id===action.usersId){\r\n                        u={...u, followed: false}\r\n                    }\r\n                    return u;\r\n                })\r\n\r\n            }\r\n        }\r\n        case SET_USERS:{\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n        }\r\n        case SET_CURRENT_PAGE:{\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        }\r\n        case SET_TOTAL_USERS_COUNT:{\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.totalUsersCount\r\n            }\r\n        }\r\n        case TOGGLE_IS_FETCHING:{\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        }\r\n        case FOLLOWING_IN_PROGRESS:{\r\n            return {\r\n                ...state,\r\n                followProgress: action.isFetching?\r\n                    [...state.followProgress, action.userId]\r\n                    :  state.followProgress.filter(id=> id !== action.userId)\r\n\r\n\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n\r\nexport const followS=(usersId)=>{\r\n    return{type: FOLLOW, usersId}\r\n\r\n}\r\nexport const unfollowS=(usersId)=>{\r\n    return{type: UNFOLLOW, usersId}\r\n}\r\nexport const setUsers=(users)=>{\r\n    return{type: SET_USERS,users}\r\n}\r\nexport const setCurrentPage=(currentPage)=>{\r\n    return{type: SET_CURRENT_PAGE, currentPage}\r\n}\r\nexport const setTotalUsersCount=(totalUsersCount)=>{\r\n    return{type: SET_TOTAL_USERS_COUNT, totalUsersCount}\r\n}\r\nexport const setToggleFetching=(isFetching)=>{\r\n    return{type: TOGGLE_IS_FETCHING, isFetching}\r\n}\r\nexport const followingInProgress=(isFetching, userId)=>{\r\n    return{type: FOLLOWING_IN_PROGRESS, isFetching, userId}\r\n}\r\nexport const getUsers = (currentPage,pageSize) => {\r\n    return (dispatch) => {\r\n        dispatch(setCurrentPage(currentPage));\r\n        dispatch(setToggleFetching(true))\r\n        usersAPI.getUsers(currentPage, pageSize).then(data => {\r\n            dispatch(setToggleFetching(false))\r\n            dispatch(setUsers(data.items));\r\n            dispatch(setTotalUsersCount(data.totalCount));\r\n        });\r\n    }\r\n}\r\nexport const follow = (userId) =>{\r\n    return(dispatch) =>{\r\n        dispatch(followingInProgress(true,userId));\r\n        usersAPI.follow(userId)\r\n            .then(response => {\r\n                if(response.data.resultCode===0){\r\n                    dispatch(followS(userId));\r\n                }\r\n                dispatch(followingInProgress(false,userId));\r\n            });\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId) =>{\r\n    return(dispatch) =>{\r\n        dispatch(followingInProgress(true,userId));\r\n        usersAPI.unfollow(userId)\r\n            .then(response => {\r\n                if(response.data.resultCode===0){\r\n                    dispatch(unfollowS(userId));\r\n                }\r\n                dispatch(followingInProgress(false,userId));\r\n            });\r\n    }\r\n}\r\n\r\n\r\nexport default usersReducer;","import React, {useState} from \"react\";\r\nimport a from \"./Users.module.css\";\r\nimport userPhoto from \"../../datas/img/user.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nlet Users = (props,{portionSize=10}) => {\r\n    let totalPagesCount = Math.ceil(props.totalUsersCount/props.pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= totalPagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    let portionCount = Math.ceil(totalPagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1)\r\n    let leftBorder = (portionNumber - 1) * portionSize + 1;\r\n    let rightBorder = portionNumber * portionSize;\r\n    let newCurrentPage = (leftBorder)=>{\r\n        debugger;\r\n        props.onClickChanged(leftBorder+portionSize);\r\n    }\r\n    let prevCurrentPage = (leftBorder)=>{\r\n\r\n        props.onClickChanged(leftBorder-portionSize);\r\n    }\r\n\r\n    return  <div>\r\n        <div className={a.paginator}>\r\n        {portionNumber>1&& <button onClick={()=>{setPortionNumber(portionNumber-1);prevCurrentPage(leftBorder)}}>PREV</button>}\r\n        <div className={a.buttonsBlock}>\r\n            {\r\n                pages.filter(p=>p>=leftBorder && p<=rightBorder)\r\n                    .map(p=>\r\n<button  onClick={()=>props.onClickChanged(p)}\r\n        className={props.currentPage===p && a.selectedPage} key={p}>{p}\r\n</button>)\r\n            }\r\n\r\n        </div>\r\n        { portionCount > portionNumber &&\r\n        <button onClick={() => { setPortionNumber(portionNumber + 1);newCurrentPage(leftBorder) }}>NEXT</button>\r\n\r\n        }\r\n        </div>\r\n        {\r\n            props.users.map(u => <div key={u.id}>\r\n                <div className={a.Container}>\r\n                    <div>\r\n\r\n                        <div><NavLink to={\"/profile/\"+u.id}>\r\n                            <img alt={\"user's photo\"} className={a.userImg} src={u.photos.small != null ? u.photos.small : userPhoto}/>\r\n                        </NavLink>\r\n                        </div>\r\n                        <div>\r\n                            {\r\n                                u.followed\r\n                                    ? <button disabled={props.followProgress.some(id=> id===u.id)} onClick={() => {\r\n                                        props.unfollow(u.id);\r\n\r\n                                    }}> unfollow</button>\r\n                                    : <button disabled={props.followProgress.some(id=> id===u.id)}  onClick={() => {\r\n                                       props.follow(u.id);\r\n                                    }}>follow</button>\r\n\r\n                            }\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div>\r\n\r\n                        <div>{u.name}</div>\r\n                        <div><p> {u.status}</p></div>\r\n                    </div>\r\n                    <div> {\"u.location.city\"} <br/>\r\n                        {\"u.location.country\"}\r\n\r\n                    </div>\r\n                </div>\r\n            </div>)\r\n        }\r\n    </div>\r\n}\r\nexport default Users","import React from \"react\";\r\nimport prel from \"../../../datas/img/prel.gif\";\r\nimport style from \"./Preloader.module.css\";\r\nlet Preloader = (props)=>{\r\n    return  (<div>\r\n        <div className={style.preloaderConatiner}>\r\n        <img src={prel} className={style.preloader}/>\r\n        </div>\r\n        </div>)\r\n\r\n}\r\nexport default Preloader;","\r\nimport { createSelector } from 'reselect';\r\n\r\nconst getUsers = (state) =>{\r\n    return (state.UsersPage.users);\r\n};\r\n\r\nexport const getAllUsers = createSelector(getUsers,(users)=>{\r\n    return(users)\r\n});\r\nexport const getPageSize = (state)=>{\r\n    return (state.UsersPage.pageSize)\r\n};\r\nexport const getTotalUsersCount = (state)=>{\r\n    return(state.UsersPage.totalUsersCount)\r\n};\r\nexport const getCurrentPage = (state)=>{\r\n    return(state.UsersPage.currentPage)\r\n};\r\nexport const getIsFetching = (state)=>{\r\n    return(state.UsersPage.isFetching)\r\n};\r\nexport const getFollowProgress = (state)=>{\r\n    return(state.UsersPage.followProgress)\r\n};","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {} from \"../../redux/usersReducer\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {followingInProgress} from \"../../redux/usersReducer\";\r\nimport {follow} from \"../../redux/usersReducer\";\r\nimport {unfollow} from \"../../redux/usersReducer\";\r\nimport {getUsers} from \"../../redux/usersReducer\";\r\nimport {\r\n    getAllUsers,\r\n    getCurrentPage,\r\n    getFollowProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount\r\n} from \"../../redux/usersSelectors\";\r\n\r\nclass UsersContainer extends React.Component{\r\n\r\n    componentDidMount() {\r\n       this.props.getUsers(this.props.currentPage, this.props.pageSize)\r\n    }\r\n\r\n    onClickChanged = (currentPage) =>{\r\n        this.props.getUsers(currentPage, this.props.pageSize)\r\n\r\n    }\r\n\r\n    render() {\r\n        return <> {this.props.isFetching? <Preloader/>:<></>}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                      pageSize={this.props.pageSize}\r\n                      onClickChanged={this.onClickChanged}\r\n                      currentPage={this.props.currentPage}\r\n                      users={this.props.users}\r\n                      unfollow={this.props.unfollow}\r\n                      follow={this.props.follow}\r\n                   followingInProgress={this.props.followingInProgress}\r\n                   followProgress={this.props.followProgress}\r\n                   portionSize={this.props.portionSize}\r\n        > </Users>\r\n            </>\r\n    }\r\n}\r\nlet mapStateToProps = (state) =>{\r\n    return {\r\n       users: state.UsersPage.users,\r\n        pageSize: state.UsersPage.pageSize,\r\n        totalUsersCount:state.UsersPage.totalUsersCount,\r\n        currentPage:getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followProgress:getFollowProgress(state),\r\n        portionSize:state.UsersPage.portionSize\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,{followingInProgress,getUsers,follow,unfollow})(UsersContainer);\r\n\r\n\r\n","import style from \"./ProlifeStatus.module.css\"\r\nimport React from \"react\";\r\n\r\nclass ProfileStatus extends React.Component{\r\n    state={\r\n        editMode: false,\r\n        status:this.props.status\r\n    }\r\n\r\n    onStatusChange =(e)=>{\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n    })\r\n    };\r\n    ActivateEditMode=()=>{\r\n        this.setState({\r\n                editMode: true\r\n            }\r\n        )\r\n    }\r\n\r\n    DeactivateEditMode=()=>{\r\n        this.setState({\r\n                editMode: false\r\n        },\r\n            this.props.updateStatus(this.state.status)\r\n\r\n        )\r\n    }\r\ncomponentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps!==this.props) {\r\n            this.setState({\r\n                status: this.props.status\r\n            })\r\n        }\r\n}\r\n\r\n    render() {\r\n      return <div>\r\n          <div className={style.mainContainer}>\r\n              {!this.state.editMode&& <div>\r\n                  <span onDoubleClick={this.ActivateEditMode} className={style.statusText}>{this.props.status}</span>\r\n              </div>}\r\n              { this.state.editMode&&\r\n              <div>\r\n                  <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.DeactivateEditMode} value={this.state.status}/>\r\n              </div>}\r\n          </div>\r\n\r\n      </div>\r\n  }\r\n}\r\nexport default ProfileStatus;\r\n","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Element} from \"../../FormsControls/FormsControls\";\r\nimport styles from \"../../FormsControls/FormsControls.module.css\";\r\nimport {required} from \"../../../validators/validators\";\r\nconst Input = Element(\"input\")\r\nconst ProfileDataForm = (props)=> {\r\n\r\n    return(\r\n        <form onSubmit={props.handleSubmit}>\r\n            {(props.error)?<div className={styles.spanError}>{props.error}</div>:undefined}\r\n           <div> <button type={\"submit\"}>save</button></div>\r\n            About me: <Field type=\"text\" name=\"aboutMe\" placeholder=\"\" component={Input} validate={required} />\r\n            Your fullname <Field type=\"text\" name=\"fullName\" placeholder=\"\" component={Input} />\r\n           Are you looking for a job? <Field type=\"checkbox\" name=\"lookingForAJob\" placeholder=\"\" component={Input} />\r\n          Please tell us about your skills  <Field type=\"text\" name=\"lookingForAJobDescription\" placeholder=\"\" component={Input} />\r\n          You in social networks\r\n            {Object.entries(props.profile.contacts).map(([key,value])=>{\r\n                return <Field type=\"text\" name={'contacts.'+key} placeholder={key} component={Input} />\r\n            })\r\n\r\n            }\r\n\r\n\r\n\r\n    </form>)\r\n}\r\nconst ProfileDataFormRedux = reduxForm(\r\n    {form:\"profileData\"}\r\n    )(ProfileDataForm);\r\nexport default ProfileDataFormRedux;","import s from \"./ProfileInfo.module.css\";\r\nimport React, {useState} from \"react\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus/ProfileStatus\";\r\nimport ProfileDataForm from \"./ProfileFormData\";\r\nconst ProfileInfo =(props)=> {\r\n    const [editMode,setEditMode]= useState(false)\r\nif(!props.profile){\r\n    return <Preloader/>\r\n}\r\n\r\n    function onPhotoSelected(e) {\r\n        if(e.target.files.length){\r\n            props.savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n    const Contact = ({contactTitle, contactValue})=>{\r\n    return<div> {contactTitle}:{contactValue}</div>\r\n    }\r\n\r\n   const onSubmit = (profileData)=>{\r\n       props.updateProfile(profileData)\r\n       setEditMode(false)\r\n   }\r\n\r\nconst ProfileData = (props) =>{\r\n    return(    <div>\r\n        <p> About user: {props.profile.aboutMe} </p>\r\n        <p> Looking for a job: {props.profile.lookingForAJob===true?<span>yes</span>: <span>no</span>} </p>\r\n        <div>Description:{props.profile.lookingForAJobDescription===null?<p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Consequuntur corporis dolorum est eum ex inventore, ipsa laudantium minus nemo tempora.</p>:props.profile.lookingForAJobDescription}</div>\r\n        <div>\r\n\r\n            <p>Contacts:</p>\r\n            {  Object.entries(props.profile.contacts).map(([key,value])=>{\r\n                return <Contact contactTitle={key} contactValue={value}/>\r\n            })\r\n\r\n            }\r\n\r\n\r\n        </div>\r\n\r\n    </div>)\r\n}\r\n\r\n    function onClick() {\r\n     return    setEditMode(true)\r\n    }\r\n\r\n    return(\r\n        <div >\r\n<div className={s.conteiner}>\r\n        <div className={s.background}>\r\n            {props.profile.photos.small==null?   <img src={\"https://i.pinimg.com/originals/a9/d0/96/a9d096ac9430a4f297ed99d42861ae9d.jpg\"} className={s.avatar}/>:  <img src={props.profile.photos.small } className={s.avatar}/>}\r\n          <div>  {props.authorizedUserID && <input type={\"file\"} onChange={onPhotoSelected}/>}</div>\r\n            <div className={s.userName}>{props.profile.fullName}</div>\r\n        </div>\r\n\r\n    <div>\r\n       <ProfileStatus updateStatus={props.updateStatus}  status={props.status}/>\r\n    </div>\r\n    {editMode?<ProfileDataForm profile={props.profile} onSubmit={onSubmit}/>:<div><ProfileData profile={props.profile}/><button onClick={onClick}>edit</button></div>}\r\n\r\n\r\n\r\n    <hr className={s.line}/>\r\n        </div>\r\n\r\n    </div>);\r\n}\r\nexport default ProfileInfo;\r\n","import {ProfileAPI, usersAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\nconst ADD_POST = 'ADD_POST';\r\nconst ADD_LIKE =\"ADD_LIKE\";\r\n\r\nconst SET_USER_PROFILE='SET_USER_PROFILE';\r\nconst SET_PROFILE_STATUS='SET_PROFILE_STATUS';\r\nconst SAVE_PHOTO = 'SAVE_PHOTO'\r\nlet InitialState ={\r\n   profile: null,\r\n    status:null,\r\n    postData :[{massege:'Hello, sabaki! Ya naruto uzumaki', kartinka:'https://klike.net/uploads/posts/2019-03/1551511784_4.jpg', likes:201, id:1,liked:false},\r\n        {massege:'I wanna end me' ,kartinka:'https://store.playstation.com/store/api/chihiro/00_09_000/container/RU/ru/999/EP1464-CUSA07669_00-AV00000000000005/1586331489000/image?w=240&h=240&bg_color=000000&opacity=100&_version=00_09_000' ,likes:15,id:2,liked: false},\r\n        {massege:'Whats wrong with you?' ,kartinka:\"https://i.pinimg.com/originals/a9/d0/96/a9d096ac9430a4f297ed99d42861ae9d.jpg\" ,likes:64,id:3,liked:false}],\r\n    buttonDef: \"like\"\r\n}\r\n\r\n\r\nlet profileReducer=(state = InitialState,action)=> {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n        {\r\n            let NewPost = {\r\n                massege: action.newPostText,\r\n                kartinka: \"https://avatarko.ru/img/kartinka/33/multfilm_lyagushka_32117.jpg\",\r\n                likes: 12\r\n            };\r\n            return  {...state,\r\n                postData:[...state.postData,NewPost],\r\n            };\r\n        }\r\n        case ADD_LIKE:{\r\n            return {\r\n                ...state,\r\n                postData: state.postData.map(u=>{\r\n                    if(u.id===action.postId && u.liked=== false){\r\n                        u={...u, likes: u.likes + 1, liked: true}\r\n                    }\r\n                    else if(u.id===action.postId && u.liked=== true){\r\n                        u={...u, likes: u.likes - 1, liked: false}\r\n                    }\r\n                    return u;\r\n                })\r\n\r\n            }\r\n            }\r\n        case SET_USER_PROFILE:{\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        }\r\n        case SET_PROFILE_STATUS:{\r\n           return {\r\n               ...state,\r\n               status: action.status\r\n           }\r\n        }\r\n        case SAVE_PHOTO:{\r\n            return {\r\n                ...state,\r\n                profile: {...state.profile, photos: action.photos}\r\n            }\r\n        }\r\n\r\n\r\n        default: return state;\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport const addPostActionCreator=(newPostText)=>{\r\n    return{type: ADD_POST,newPostText}\r\n\r\n}\r\nexport const addLikeAC = (postId) =>{\r\n    return{type:ADD_LIKE, postId }\r\n}\r\nexport const setUserProfile = (profile)=>{\r\n    return{type:SET_USER_PROFILE, profile}\r\n}\r\nexport const getUserProfile = (userId) =>{\r\n   return (dispatch)=>{\r\n       usersAPI.setProfile(userId).then(response => {\r\n          dispatch(setUserProfile(response.data));\r\n       });\r\n    }\r\n}\r\nexport const setProfileStatus =(status)=>{\r\n    return{type: SET_PROFILE_STATUS, status }\r\n\r\n}\r\nexport const savePhotoSuccess = (photos)=>{\r\n    return{type:SAVE_PHOTO, photos}\r\n}\r\nexport const getProfileStatus = (userId) =>{\r\n    return(dispatch)=>{\r\n        ProfileAPI.getStatus(userId).then(response=>{\r\n            dispatch(setProfileStatus(response.data))\r\n        })\r\n    }\r\n}\r\nexport const updateStatus =(status)=>{\r\n    return(dispatch)=>{\r\n        ProfileAPI.updateStatus(status).then(response=>{\r\n            if(response.data.resultCode===0){\r\n                dispatch(setProfileStatus(status))\r\n            }\r\n        })\r\n    }\r\n}\r\nexport const savePhoto =(file)=> (dispatch)=> {\r\n        ProfileAPI.savePhoto(file).then(response =>{\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(savePhotoSuccess(response.data.data.photos))\r\n        }})\r\n\r\n}\r\nexport const updateProfile =(profile)=>{\r\n    return(dispatch,getState)=>{\r\n        const userId = getState().auth.id\r\n        ProfileAPI.updateProfile(profile).then(response=>{\r\n            if(response.data.resultCode===0){\r\n                dispatch(getUserProfile(userId))\r\n            }\r\n            else {\r\n                const message = (response.data.messages.length>0)? response.data.messages[0]: \"Something wrong\"\r\n                dispatch(stopSubmit(\"profileData\",{_error:message}));\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport default profileReducer;","import React from 'react';\r\nimport a from './Post.module.css';\r\n\r\nconst  Post= (props) => {\r\n    return (\r\n        props.postData.map(u => <div key={u.id}>\r\n\r\n        <div className={a.item}>\r\n\r\n            <div className={a.container}>\r\n            <div className={a.avatar}>\r\n            <img src={u.kartinka}/>\r\n            </div>\r\n            <div>\r\n            {u.massege}\r\n            </div>\r\n            </div>\r\n            <span>\r\n               {u.likes} likes <button className={a.shareButton} onClick={() => {\r\n                props.addLike(u.id)\r\n            }}>\r\n                {u.liked\r\n                    ? <i className=\"fas fa-heart\"> </i>\r\n                    :<i class=\"far fa-heart\"> </i>\r\n                }\r\n\r\n                \r\n                </button>\r\n            </span>\r\n\r\n    </div>\r\n            </div>\r\n         ));\r\n}\r\nexport default Post;\r\n","import React, {useState} from 'react';\r\nimport a from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Element} from \"../../FormsControls/FormsControls\";\r\n\r\nconst Textarea = Element(\"textarea\");\r\n\r\n//const required = value => (value  ? undefined : 'Required');\r\nconst maxLength = max => value =>\r\n    value && value.length > max ? `Must be ${max} characters or less` : undefined\r\n//обовязково брати перевірку наявності значення(value)\r\nconst maxLength30 = maxLength(30);\r\n\r\nconst MyPosts = React.memo((props) => {\r\n    let addingPost = (value) => {\r\n        props.addPost(value.newPostText);\r\n    };\r\nconsole.log(\"render\");\r\n    return (\r\n\r\n        <div className={a.MainConteiner}>\r\n            <div className={a.newPost}>\r\n                <div className={a.myPost}>\r\n                    My posts\r\n                </div>\r\n                <AddPostRedux onSubmit={addingPost}/>\r\n            </div>\r\n            <div className={a.posts}>\r\n                <Post\r\n                    postData={props.postData}\r\n                    addLike={props.addLike}\r\n                    buttonDef={props.buttonDef}\r\n                />\r\n            </div>\r\n        </div>);\r\n});\r\n\r\nlet AddPost = (props)=>{\r\n\r\n    return(<form onSubmit={props.handleSubmit}>\r\n            <Field validate={[ maxLength30]} name={\"newPostText\"} component={Textarea} className={a.textarea}/>\r\n            <button type={\"submit\"} className={a.shareButton}>Submit </button>\r\n    </form>)\r\n};\r\nlet AddPostRedux = reduxForm({form:\"addPost\"})(AddPost);\r\n\r\nexport default MyPosts;\r\n","import React from 'react';\r\nimport {addLikeAC, addPostActionCreator} from \"../../../redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) =>{\r\n   return {\r\n       postData: state.ProfilePage.postData,\r\n       newPostText:state.ProfilePage.newPostText,\r\n       buttonDef:state.ProfilePage.buttonDef\r\n   }\r\n}\r\n// const mapDispatchToProps = (dispatch) =>{\r\n//    return {\r\n//        changeNewPostText:(edtext)=>{\r\n//            let action = changeNewPostTextActionCreator(edtext);\r\n//           dispatch(action)},\r\n//        addPost:()=>{\r\n//          dispatch(addPostActionCreator());\r\n//        },\r\n//        addLike:(postId)=>{\r\n//           dispatch(addLikeAC(postId))\r\n//        }\r\n//    }\r\n// }\r\n\r\n\r\nconst MyPostsContainer = connect(mapStateToProps,{addPost:addPostActionCreator, addLike:addLikeAC})(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React from 'react';\r\nimport a from './ProfileCom.module.css';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./My posts/MyPostsContainer\";\r\n\r\nconst ProfileCom = (props) => {\r\n    return (\r\n        <div className={a.content}>\r\n            <div>\r\n            <ProfileInfo profile={props.profile} status={props.status}\r\n                         updateStatus={props.updateStatus} authorizedUserID={!!props.authorizedUserID}\r\n            savePhoto={props.savePhoto} updateProfile={props.updateProfile}/>\r\n            <MyPostsContainer/>\r\n            </div>\r\n        </div>);\r\n}\r\nexport default ProfileCom;\r\n","import React from 'react';\r\nimport ProfileCom from \"./ProfileCom\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {getProfileStatus, getUserProfile, savePhoto, updateProfile, updateStatus} from \"../../redux/profileReducer\";\r\nimport withAuthRedirect from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileComContainer extends React.Component{\r\nconstructor(props) {\r\n\r\n    super(props);\r\n}\r\nrefreshProfile(){\r\n    let userId = this.props.match.params.userId;\r\n    if(!userId){\r\n        userId = this.props.authorizedUserID;\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getProfileStatus(userId);\r\n}\r\n    componentDidMount() {\r\n    debugger;\r\n        this.refreshProfile()\r\n}\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(this.props.match.params.userId !== prevProps.match.params.userId){\r\n            this.refreshProfile();}\r\n    }\r\n\r\n    render() {\r\n    //{...this.props} remove\r\n    return(<ProfileCom savePhoto={this.props.savePhoto}  profile={this.props.profile} status={this.props.status}\r\n                       updateStatus={this.props.updateStatus} authorizedUserID={this.props.authorizedUserID}\r\n                       updateProfile={this.props.updateProfile}\r\n\r\n    />)\r\n    }\r\n}\r\nlet mapStateToProps =(state) =>{\r\n    return {\r\n        profile: state.ProfilePage.profile,\r\n        status:state.ProfilePage.status,\r\n        authorizedUserID:state.auth.id\r\n    }\r\n}\r\n export default compose(\r\n    connect (mapStateToProps,{getUserProfile,getProfileStatus,updateStatus,savePhoto,updateProfile}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileComContainer)","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nfunction Header(props) {\r\n\r\n\r\n    return (\r\n\r\n\r\n        <header className={s.Header}>\r\n        <div className={s.headerContainer}>\r\n            <div className={s.logoConteiner}>\r\n                <div><img\r\n                    src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/4/4a/Inkscape.logo.svg/390px-Inkscape.logo.svg.png\"/>\r\n                </div>\r\n                <div className={s.nameLogo}>Keetouch</div>\r\n            </div>\r\n\r\n\r\n            <div className={s.authBlock}>\r\n                {\r\n                    props.isAuth ? <div className={s.nameWithExit}>\r\n                            <div><NavLink to={`/profile/${props.id}`}> {props.login}</NavLink></div>\r\n                            <a onClick={props.logout}>Exit</a></div>\r\n                        : <NavLink  to={\"/login\"}>Login</NavLink>\r\n                }\r\n\r\n            </div>\r\n\r\n        </div>\r\n    </header>);\r\n}\r\n\r\nexport default Header;\r\n","import {authAPI, SecurityAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\nconst GET_CAPTCHA_URL = `GET_CAPTCHA_URL`;\r\nlet InitialState ={\r\n    data: {\r\n        id: null,\r\n        email: null,\r\n        login: null,\r\n        isAuth:false,\r\n        photo: null,\r\n        captchaUrl: null\r\n\r\n    }\r\n};\r\n\r\nlet authReducer =(state = InitialState,action)=> {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:{\r\n            return  {...state,\r\n               ...action.data\r\n            };\r\n        }\r\n        case GET_CAPTCHA_URL:{\r\n            debugger\r\n            return {\r\n                ...state,\r\n                captchaUrl: action.captchaUrl\r\n\r\n            }\r\n\r\n        }\r\n        default: return state;\r\n    }\r\n};\r\nexport let setUserAuthData = (id, email, login, isAuth)=>{\r\n    return{\r\n        type:SET_USER_DATA,\r\n        data:{ id,email,login,isAuth}\r\n    }\r\n};\r\nexport const getUserAuthData = () =>\r\n     (dispatch)=>{\r\n         return authAPI.authme().then(response => {\r\n            if(response.data.resultCode===0) {\r\n                let {id,email,login} = response.data.data;\r\n                dispatch(setUserAuthData(id,email,login,true));\r\n            }\r\n        });\r\n\r\n};\r\nexport const login = (email,password,rememberMe,captcha) =>{\r\n\r\n    return (dispatch)=>{\r\n        authAPI.login(email,password,rememberMe,captcha).then(response => {\r\n            if(response.data.resultCode===0) {\r\n                dispatch(getUserAuthData());\r\n            }\r\n            else {\r\n                if(response.data.resultCode===10){\r\n                    dispatch(getCaptchaUrl())\r\n                }\r\n                let massege = response.data.messages.length>0?response.data.messages[0]:\"Some error\";\r\n                dispatch(stopSubmit(\"login\",{_error:massege}));\r\n\r\n            }\r\n\r\n\r\n\r\n        });\r\n    }\r\n};\r\nexport const setCaptchaSuccess = (captchaUrl)=>{\r\n    return{\r\n        type:GET_CAPTCHA_URL,\r\n        captchaUrl\r\n    }\r\n};\r\nexport const getCaptchaUrl = ()=>{\r\n    return (dispatch)=>{\r\n        SecurityAPI.getCaptcha().then(response =>{\r\n            debugger\r\n           const captchaUrl = response.data.url;\r\n            dispatch(setCaptchaSuccess(captchaUrl))\r\n        })\r\n\r\n    }\r\n}\r\nexport const logout = () =>{\r\n    return (dispatch)=>{\r\n        authAPI.logout().then(response => {\r\n            if(response.data.resultCode===0) {\r\n                dispatch(setUserAuthData(null,null,null,false));\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\nexport default authReducer;\r\n\r\n","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport { logout,} from \"../../redux/auth-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {getUserProfile} from \"../../redux/profileReducer\";\r\n\r\nclass HeaderContainer extends React.Component{\r\n    render() {\r\n        return(<Header {...this.props}/>)\r\n    }\r\n}\r\nlet mapStateToProps =(state) =>{\r\n    return {\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n    profile: state.ProfilePage.profile,\r\n        id: state.auth.id\r\n    }\r\n}\r\nexport default  connect(mapStateToProps,{logout,getUserProfile}) (HeaderContainer);\r\n","import React from \"react\";\r\nimport style from \"./LoginPage.module.css\"\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Element} from \"../FormsControls/FormsControls\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport styles from \"./../FormsControls/FormsControls.module.css\"\r\nconst Input = Element(\"input\")\r\nexport const required = (value) => (value  ?  undefined : 'Required');\r\nconst Loginpage = (props) =>{\r\n    let onSubmit = (value)=>{\r\n        props.login(value.email,value.password,value.rememberMe, value.captcha)\r\n    }\r\n    if (props.isAuth){\r\n        return (\r\n            <Redirect to={\"/profile\"}/>\r\n        )\r\n    }\r\n    return(<div>\r\n        <div className={style.textContainer}>\r\n           <div><p className={style.loginText}> LOGIN</p></div>\r\n          <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}/>\r\n</div>\r\n    </div>)\r\n};\r\nconst LoginForm = (props) =>{\r\n    return(\r\n        <form onSubmit={props.handleSubmit}>\r\n        <Field type=\"login\" name=\"email\" placeholder=\"your login\" component={Input} validate={ required }/>\r\n        <Field type=\"password\" name=\"password\" placeholder=\"your password\" component={Input} validate={ required }/>\r\n        <Field type=\"checkbox\" name=\"rememberMe\" component={\"input\"}/> remember me\r\n            {(props.error)?<div className={styles.spanError}>{props.error}</div>:undefined}\r\n            {props.captchaUrl && <div><img src={props.captchaUrl} /><div><Field type=\"text\" name=\"captcha\" placeholder={\"enter symbols what you see\"} component={\"input\"}/></div> </div>}\r\n        <button type=\"submit\">Submit</button>\r\n    </form>)\r\n};\r\nconst LoginReduxForm = reduxForm({\r\n    form: \"login\"\r\n})(LoginForm);\r\nconst mapStateToProps =(state)=>{\r\n    return{\r\n        isAuth:state.auth.isAuth,\r\n        captchaUrl: state.auth.captchaUrl\r\n    }\r\n}\r\nexport default connect(mapStateToProps,{login}) (Loginpage);","import {getUserAuthData} from \"./auth-reducer\";\r\nconst INITIALIZE_DONE = 'INITIALIZE_DONE';\r\n\r\nlet InitialState ={\r\n    initialized:false\r\n};\r\n\r\nlet appReducer =(state = InitialState,action)=> {\r\n    switch (action.type) {\r\n        case INITIALIZE_DONE:{\r\n            return  {...state,\r\n                initialized:true\r\n            };\r\n        }\r\n        default: return state;\r\n    }\r\n};\r\nexport let initialize = ()=>{\r\n    return{\r\n        type:INITIALIZE_DONE\r\n    }\r\n};\r\nexport const initializeApp = () => (dispatch)=>{\r\nconst promise = dispatch(getUserAuthData());\r\n//const promiseTheme = dispatch(getTheme());\r\nPromise.all([promise]).then(()=>{\r\n    dispatch(initialize())\r\n})\r\n    }\r\n\r\n\r\nexport default appReducer;\r\n\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport dialogsReducer from \"./dialogsReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {reducer as formReducer} from \"redux-form\";\r\nimport appReducer from \"./appReducer\";\r\n\r\nlet reducers = combineReducers(\r\n    {ProfilePage:profileReducer,\r\n             MassagePage:dialogsReducer,\r\n             UsersPage: usersReducer,\r\n             auth:authReducer,\r\n             form: formReducer,\r\n             appCommon: appReducer\r\n    }\r\n    );\r\nlet store = createStore(reducers,applyMiddleware(thunkMiddleware));\r\nwindow.store = store;\r\nexport default store;","import React from 'react';\r\nimport './App.css';\r\nimport Nav from \"./contonents/Havbar/Nav\";\r\nimport {BrowserRouter, Route} from \"react-router-dom\";\r\nimport  {withRouter} from \"react-router-dom\";\r\nimport Music from \"./contonents/Music/Music\";\r\nimport MassegesContainer from \"./contonents/Masseges/MassegesContainer\";\r\nimport UsersContainer from \"./contonents/Users/UsersContainer\";\r\nimport ProfileComContainer from \"./contonents/ProfileCom/ProfileComContainer\";\r\nimport HeaderContainer from \"./contonents/Header/HeaderContainer\";\r\nimport LoginPage from \"./contonents/login/Loginpage\";\r\nimport {connect, Provider} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {initializeApp} from \"./redux/appReducer\";\r\nimport Preloader from \"./contonents/common/Preloader/Preloader\";\r\nimport store from \"./redux/redux-store\";\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n    }\r\n    render() {\r\n        if(!this.props.initialized){\r\n            return <Preloader/>\r\n        }\r\n        return (\r\n            <div className=\"app-wrapper\">\r\n                <HeaderContainer/>\r\n                <Nav/>\r\n                <div className=\"app-wrapper-content\">\r\n                    <Route path='/messages' render={() => <MassegesContainer/>}/>\r\n                    <Route path=\"/profile/:userId?\" render={() => <ProfileComContainer/>}/>\r\n                    <Route path='/users' render={() => <UsersContainer/>}/>\r\n                    <Route path=\"/music\" component={Music}/>\r\n                    <Route path='/login' render={() => <LoginPage/>}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps =(state)=>({\r\n    initialized: state.appCommon.initialized,\r\n})\r\n\r\nconst AppContainer = compose(\r\n    withRouter,\r\nconnect(mapStateToProps,{initializeApp})) (App);\r\nconst MainApp = (props)=>{\r\n    return(<BrowserRouter>\r\n        <link rel=\"stylesheet\" href=\"https://use.fontawesome.com/releases/v5.6.1/css/all.css\"\r\n              integrity=\"sha384-gfdkjb5BdAXd+lj+gudLWI+BXq4IuLW5IT+brZEZsLFm++aCMlF1V92rMkPaX4PP\"\r\n              crossOrigin=\"anonymous\"/>\r\n        <link href=\"https://fonts.googleapis.com/css2?family=Lato:ital,wght@0,300;0,400;0,700;1,300;1,400;1,700&family=Notable&family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,300;1,400;1,500;1,700;1,900&display=swap\" rel=\"stylesheet\"/>\r\n        <Provider store={store}>\r\n            <AppContainer/>\r\n        </Provider> </BrowserRouter>)\r\n}\r\nexport default MainApp","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport MainApp from \"./App\";\r\n\r\n\r\n\r\n    ReactDOM.render(<MainApp/>, document.\r\n    getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"FormsControls_error__3OLHi\",\"spanError\":\"FormsControls_spanError__2uqSD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainMasseges\":\"Masseges_mainMasseges__3VfwA\",\"dialogsItem\":\"Masseges_dialogsItem__1L4Np\",\"inputMassage\":\"Masseges_inputMassage__28cAN\",\"textarea\":\"Masseges_textarea__2IV2a\",\"dialogs\":\"Masseges_dialogs__2DsuF\",\"shareButton\":\"Masseges_shareButton__1shA2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"DialogItem_dialogs__3RgDU\",\"photo\":\"DialogItem_photo__3L__9\",\"kartinka\":\"DialogItem_kartinka__t7B1J\",\"nameDialog\":\"DialogItem_nameDialog__2bcJs\",\"active\":\"DialogItem_active__1MKGb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"conteiner\":\"ProfileInfo_conteiner__192ae\",\"background\":\"ProfileInfo_background__2Ljkr\",\"avatar\":\"ProfileInfo_avatar__1aQAo\",\"userName\":\"ProfileInfo_userName__JaCqo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"MyPosts_content__3R2JR\",\"MainConteiner\":\"MyPosts_MainConteiner__2Ff28\",\"newPost\":\"MyPosts_newPost__2-V_h\",\"textarea\":\"MyPosts_textarea__2F7Kh\",\"myPost\":\"MyPosts_myPost__1SIYf\",\"shareButton\":\"MyPosts_shareButton__1nIYN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__3SLqU\",\"logoConteiner\":\"Header_logoConteiner__Coi6W\",\"nameLogo\":\"Header_nameLogo__3bqkw\",\"headerContainer\":\"Header_headerContainer__92M72\",\"authBlock\":\"Header_authBlock__2ZYIy\",\"nameWithExit\":\"Header_nameWithExit__1bBDy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userImg\":\"Users_userImg__2IyxD\",\"Container\":\"Users_Container__19s6x\",\"selectedPage\":\"Users_selectedPage__qZdid\",\"buttonsBlock\":\"Users_buttonsBlock__CHNOg\",\"paginator\":\"Users_paginator__2HTj7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2bga8\",\"container\":\"Post_container__2zCIH\",\"avatar\":\"Post_avatar__DfcCF\",\"shareButton\":\"Post_shareButton__2RWA0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__C0Mxc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"ProlifeStatus_mainContainer__QyxD3\",\"statusText\":\"ProlifeStatus_statusText__2YVzs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginText\":\"LoginPage_loginText__2XsLH\",\"textContainer\":\"LoginPage_textContainer__3v8pS\"};"],"sourceRoot":""}