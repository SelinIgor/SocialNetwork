{"version":3,"sources":["contonents/Header/Nav.module.css","contonents/Music/Music.module.css","contonents/Masseges/MassegeItem/MassegesItem.module.css","datas/img/user.png","datas/img/prel.gif","contonents/Setting/Setting.module.css","serviceWorker.js","contonents/Masseges/Masseges.js","contonents/Music/Music.js","redux/dialogsReducer.js","contonents/Masseges/DialogItem/DialogItem.js","contonents/Masseges/MassegeItem/MassegeItem.js","contonents/FormsControls/FormsControls.js","hoc/withAuthRedirect.js","contonents/Masseges/MassegesContainer.js","contonents/Users/Users.jsx","contonents/common/Preloader/Preloader.jsx","api/api.js","redux/usersReducer.js","redux/usersSelectors.js","contonents/Users/Pagitanor.js","contonents/Users/UsersContainer.jsx","contonents/ProfileCom/ProfileInfo/ProfileStatus/ProfileStatus.jsx","contonents/ProfileCom/ProfileInfo/ProfileFormData.jsx","contonents/ProfileCom/ProfileInfo/ProfileInfo.js","redux/profileReducer.js","contonents/ProfileCom/My posts/Post/Post.jsx","contonents/ProfileCom/My posts/MyPosts.jsx","contonents/ProfileCom/My posts/MyPostsContainer.jsx","contonents/ProfileCom/ProfileCom.jsx","contonents/ProfileCom/ProfileComContainer.jsx","redux/auth-reducer.js","contonents/login/Loginpage.js","redux/appReducer.js","redux/redux-store.js","contonents/Footer/Footer.jsx","contonents/Setting/Setting.js","contonents/Header/HeaderWithNavigation.js","App.js","index.js","contonents/ProfileCom/ProfileInfo/ProfileInfo.module.css","contonents/FormsControls/FormsControls.module.css","contonents/Masseges/DialogItem/DialogItem.module.css","contonents/ProfileCom/My posts/MyPosts.module.css","contonents/login/LoginPage.module.css","contonents/Masseges/Masseges.module.css","contonents/Users/Users.module.css","contonents/Users/Paginator.module.css","contonents/ProfileCom/ProfileInfo/ProfileFormData.module.css","contonents/ProfileCom/My posts/Post/Post.module.css","contonents/Header/Header.module.css","contonents/common/Preloader/Preloader.module.css","contonents/ProfileCom/ProfileInfo/ProfileStatus/ProlifeStatus.module.css","contonents/Footer/Footer.module.css"],"names":["module","exports","Boolean","window","location","hostname","match","max","Music","className","s","musicContainer","InitialState","masseges","text","dialogs","name","id","kartinka","dialogsReducer","state","action","type","stateCopy","NewSms","newMassage","push","DialogItem","props","photo","src","nameDialog","to","activeClassName","active","MessageItem","messagesItem","Element","input","meta","hasError","touched","error","styleTextarea","classNames","styles","spanError","Textarea","maxLength50","value","length","AddReduxMassage","reduxForm","form","onSubmit","handleSubmit","Field","textarea","component","validate","shareButton","Masseges","MessagesElements","dialogsPage","map","massege","DialogsElements","dialog","key","values","sendSms","newMassegeBody","mapStateToPropsForRedirect","isAuth","auth","authorizedUserID","withAuthRedirect","Component","compose","connect","MassagePage","dispatch","sendSmsActionCreator","Users","users","u","container","avatarName","alt","userImg","photos","small","userPhoto","followBtn","followed","disabled","followProgress","some","onClick","unfollow","follow","infoUser","status","Preloader","style","preloaderConatiner","prel","preloader","instance","axios","withCredentials","baseURL","headers","usersAPI","currentPage","pageSize","get","then","response","data","userId","post","delete","authAPI","email","password","rememberMe","captcha","ProfileAPI","put","formData","FormData","append","profile","SecurityAPI","totalUsersCount","portionSize","isFetching","setToggleFetching","followingInProgress","usersReducer","usersId","filter","getCurrentPage","createSelector","UsersPage","getIsFetching","getFollowProgress","Paginator","totalPagesCount","Math","ceil","pages","i","portionCount","useState","portionNumber","setPortionNumber","leftBorder","rightBorder","buttonsContainer","controlButton","onClickChanged","prevCurrentPage","p","cn","button","selectedPage","newCurrentPage","UsersContainer","getUsers","this","React","setCurrentPage","items","totalCount","resultCode","ProfileStatus","editMode","onStatusChange","e","setState","currentTarget","ActivateEditMode","isOwner","DeactivateEditMode","updateStatus","prevProps","prevState","snapshot","mainContainer","onDoubleClick","statusText","onChange","autoFocus","onBlur","Input","ProfileDataFormRedux","buttons","btn","onCancel","undefined","placeholder","Object","entries","contacts","ProfileInfo","setEditMode","onPhotoSelected","target","files","savePhoto","Contact","contactTitle","contactValue","ProfileData","aboutMe","lookingForAJob","lookingForAJobDescription","SelectPhoto","box","background","avatar","userName","fullName","profileData","updateProfile","picture","postData","likes","liked","buttonDef","getUserProfile","setProfileStatus","profileReducer","NewPost","newPostText","postId","Post","a","item","addLike","maxLength30","maxLength","AddPostRedux","MyPosts","newPost","myPost","addPost","posts","MyPostsContainer","ProfilePage","ProfileCom","ProfileComContainer","params","getProfileStatus","refreshProfile","file","getState","message","messages","stopSubmit","_error","withRouter","login","captchaUrl","setUserAuthData","getUserAuthData","getCaptchaUrl","url","setCaptchaSuccess","authReducer","required","buttonClasses","btnSpecial","LoginReduxForm","loginText","initialized","appReducer","reducers","combineReducers","formReducer","appCommon","store","createStore","applyMiddleware","thunkMiddleware","Footer","footerContainer","authorInfo","Setting","settingsContainer","HeaderWithNavigation","$","inner","headerH","innerHeight","on","scrollTop","addClass","fixed","removeClass","event","preventDefault","toggleClass","show","n","Header","logoContainer","nameLogo","burger","Nav","Container","nav","logout","App","initializeApp","path","render","AppContainer","promise","Promise","all","MainApp","rel","href","integrity","crossOrigin","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.3ce114e3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Nav\":\"Nav_Nav__Q5tCT\",\"nav\":\"Nav_nav__14NAx\",\"active\":\"Nav_active__3UyPC\",\"Container\":\"Nav_Container__1Fj8I\",\"fixed\":\"Nav_fixed__2xYqv\",\"burger\":\"Nav_burger__2jzvS\",\"show\":\"Nav_show__1EBXT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"musicContainer\":\"Music_musicContainer__21OQf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messagesItem\":\"MassegesItem_messagesItem__3DRQ4\"};","module.exports = __webpack_public_path__ + \"static/media/user.83bd44a6.png\";","module.exports = __webpack_public_path__ + \"static/media/prel.6e5d6096.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settingsContainer\":\"Setting_settingsContainer__3pTNN\"};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport s from './Masseges.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport MessageItem from \"./MassegeItem/MassegeItem\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Element} from '../FormsControls/FormsControls'\r\nconst Textarea = Element(\"textarea\")\r\nconst maxLength = (max) =>\r\n    (value)=> {\r\n        if(value && value.length > max) return `Must be ${max} characters or less`\r\n        return undefined}\r\nconst maxLength50 = maxLength(50)\r\nconst Masseges = (props)=> {\r\n    let addNewMassage = (values) =>{\r\n    props.sendSms(values.newMassegeBody);\r\n    };\r\n    let MessagesElements = props.dialogsPage.masseges.map((massege)=> <MessageItem text={massege.text}/>) ;\r\n    let DialogsElements = props.dialogsPage.dialogs.map((dialog)=> <DialogItem key={dialog.id} name={dialog.name} id={dialog.id} kartinka={dialog.kartinka}/> );\r\n    return (<div className={s[\"mainMessages\"]}>\r\n        <div className={s[\"dialogsContainer\"]}>\r\n            {DialogsElements}\r\n        </div>\r\n        <div className={s.dialogs}>\r\n          <div>  {MessagesElements}</div>\r\n            <div>\r\n     <AddReduxMassage onSubmit={addNewMassage} />\r\n            </div>\r\n        </div>\r\n        </div>\r\n        );\r\n        }\r\nconst AddMassage =(props)=>{\r\n    return(       <form onSubmit={props.handleSubmit}>\r\n        <Field className={s.textarea} component={Textarea} validate={[maxLength50]} name={\"newMassegeBody\"} />\r\n        <div>\r\n            <button type=\"submit\" className={s.shareButton}> Send</button>\r\n\r\n        </div>\r\n    </form>)\r\n}\r\n        const AddReduxMassage = reduxForm({form:\"addMassage\"})(AddMassage)\r\n\r\n        export default Masseges;\r\n","import React from 'react';\r\nimport s from './Music.module.css';\r\n\r\n\r\nconst Music = ()=> {\r\n    return (\r\n        <div>\r\n            <div className={s.musicContainer}>\r\n      Coming soon...\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default Music;\r\n","\r\nconst ADD_SMS = \"ADD_SMS\";\r\n\r\nlet InitialState ={\r\n    masseges :[{text:'Hi there'},{text:'What Am I doing wrong?'},{text:'Nothing. Cant get it'},{text:'Okey'}],\r\n    dialogs :[{name:\"Igor\", id:1, kartinka:\"https://i.pinimg.com/736x/c9/eb/dd/c9ebddca44e1b308c672e641af252be5.jpg\"},\r\n        {name:\"Nestor\", id:2,kartinka:\"https://i.pinimg.com/736x/c9/eb/dd/c9ebddca44e1b308c672e641af252be5.jpg\"},\r\n        {name:\"Marta\" ,id:3,kartinka:\"https://i.pinimg.com/736x/c9/eb/dd/c9ebddca44e1b308c672e641af252be5.jpg\"},\r\n        {name:\"Oleg\", id:4,kartinka:\"https://i.pinimg.com/736x/c9/eb/dd/c9ebddca44e1b308c672e641af252be5.jpg\"}]\r\n\r\n}\r\n\r\nlet dialogsReducer=(state = InitialState,action)=>{\r\nswitch (action.type) {\r\n    case ADD_SMS: {\r\n        let stateCopy = {...state,\r\n            masseges:[...state.masseges]};\r\n\r\n        let NewSms = {\r\n            text: action.newMassage\r\n        };\r\n        stateCopy.masseges.push(NewSms);\r\n        return stateCopy;\r\n    }\r\n    default: return state;\r\n}\r\n\r\n\r\n}\r\n\r\n\r\nexport let sendSmsActionCreator=(newMassage)=>{\r\n    return{type: ADD_SMS, newMassage}\r\n};\r\n\r\nexport default dialogsReducer;\r\n\r\n","import React from 'react';\r\nimport s from './DialogItem.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nconst DialogItem = (props)=>{\r\n    let path='/profile';\r\n    return(\r\n        <div className={s.dialogs}>\r\n            <div className={s.photo}><img src={props.kartinka} className={s.kartinka}/></div>\r\n            <div className={s.nameDialog}><NavLink to={path} activeClassName= {s.active} className={s.nameDialog} >{props.name}</NavLink>\r\n            </div>\r\n        </div>);\r\n}\r\n        export default DialogItem;\r\n","import React from 'react';\r\nimport s from './MassegesItem.module.css';\r\n\r\nconst MessageItem =(props)=>{\r\n    return( <div>\r\n        <div className={s.messagesItem}>\r\n        {props.text}\r\n            </div>\r\n    </div>);\r\n}\r\n        export default MessageItem;\r\n","import React from \"react\";\r\nimport styles from \"./FormsControls.module.css\"\r\nimport classNames from 'classnames'\r\nexport const Element = (Element) =>({input,meta,className,...props})=> {\r\n    const hasError = meta.touched && meta.error;\r\n    const styleTextarea = classNames(className, (hasError && styles.error))\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Element {...input} {...props} className={styleTextarea}/>\r\n            </div>\r\n            {hasError && <span className={styles.spanError}>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React from \"react\";\r\nimport  {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\n/*import {withRouter} from \"react-router-dom\";*/\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        authorizedUserID: state.auth.id,\r\n    }\r\n}\r\n\r\nexport let withAuthRedirect = (Component)=>{\r\n    let RedirectComponent =(props)=>{\r\n        if(!props.isAuth) return <Redirect to='/login'/>\r\n    return(<Component {...props}/>)\r\n    }\r\n   return compose\r\n   (connect(mapStateToPropsForRedirect,{}))(RedirectComponent);\r\n}\r\n\r\n\r\n/*\r\nexport const willShowComponent = (Component) =>{\r\n    debugger;\r\n    const showComponent = (props)=> {\r\n\r\n        if (!props.match.params.userId || props.match.params.userId===props.authorizedUserID) {\r\n            return <Component {...props}/>\r\n        }\r\n    }\r\n     compose(withRouter,connect(mapStateToPropsForRedirect,{}))(showComponent)\r\n}\r\n\r\n\r\n*/\r\n","import React from 'react';\r\n\r\nimport {sendSmsActionCreator} from \"../../redux/dialogsReducer\";\r\nimport Masseges from \"./Masseges\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        dialogsPage:state.MassagePage,\r\n\r\n    }\r\n};\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return {\r\n        sendSms:(newMassage)=>{dispatch(sendSmsActionCreator(newMassage))},\r\n\r\n\r\n    }\r\n};\r\nexport default compose(\r\n    connect(mapStateToProps,mapDispatchToProps),\r\n    withAuthRedirect\r\n)\r\n(Masseges);\r\n","import React from \"react\";\r\nimport s from \"./Users.module.css\";\r\nimport userPhoto from \"../../datas/img/user.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nlet Users = (props) => {\r\n    return  <div>\r\n\r\n        {\r\n            props.users.map(u => <div key={u.id}>\r\n                <div>\r\n                    <div  className={s.container}>\r\n                    <div>\r\n\r\n                        <div className={s.avatarName}><NavLink to={\"/profile/\"+u.id}>\r\n                            <img alt={\"user's photo\"} className={s.userImg} src={u.photos.small != null ? u.photos.small : userPhoto}/>\r\n                        </NavLink>\r\n                            <div>{u.name}</div>\r\n                            <div className={s.followBtn}>\r\n                                {\r\n                                    u.followed\r\n                                        ? <button  disabled={props.followProgress.some(id=> id===u.id)} onClick={() => {\r\n                                            props.unfollow(u.id);\r\n\r\n                                        }}> unfollow</button>\r\n                                        : <button disabled={props.followProgress.some(id=> id===u.id)}  onClick={() => {\r\n                                            props.follow(u.id);\r\n                                        }}>follow</button>\r\n\r\n                                }\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className={s.infoUser}>\r\n                        <div><p> {u.status && `Status: ${u.status}` }</p></div>\r\n                        <div>\r\n                            <p>User id: {u.id}</p>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            </div>)\r\n        }\r\n    </div>\r\n}\r\nexport default Users","import React from \"react\";\r\nimport prel from \"../../../datas/img/prel.gif\";\r\nimport style from \"./Preloader.module.css\";\r\nlet Preloader = (props)=>{\r\n    return  (<div>\r\n        <div className={style.preloaderConatiner}>\r\n        <img src={prel} className={style.preloader}/>\r\n        </div>\r\n        </div>)\r\n\r\n}\r\nexport default Preloader;","import * as axios from \"axios\";\r\n\r\n     const instance = axios.create(\r\n         {\r\n             withCredentials: true,\r\n             baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n             headers:{\r\n                 \"API-KEY\":\"14afbc17-5def-47a5-befe-a2e4e52003d8\"\r\n             }\r\n         }\r\n     )\r\n\r\n\r\nexport const usersAPI = {\r\n         getUsers(currentPage=1,pageSize=5){\r\n             return instance.get(`users?page=${currentPage}&count=${pageSize}`).then(response => {\r\n                 return response.data\r\n             });\r\n         },\r\n         follow(userId){\r\n            return  instance.post(`follow/${userId}`)\r\n\r\n         },\r\n         unfollow(userId){\r\n          return  instance.delete(`follow/${userId}`)\r\n         },\r\n         setProfile(userId){\r\n            return  instance.get(`profile/${userId}`)\r\n         }\r\n         }\r\n\r\nexport const authAPI = {\r\n   authme(){\r\n      return  instance.get(`auth/me`)\r\n   },\r\n    login(email,password,rememberMe, captcha=null){\r\n        return instance.post(`/auth/login`, {email,password,rememberMe,captcha})\r\n    },\r\n    logout(){\r\n       return instance.delete(`/auth/login`)\r\n    }\r\n     }\r\n\r\nexport const ProfileAPI = {\r\n        getStatus(userId){\r\n            return  instance.get(`profile/status/`+ userId)\r\n        },\r\n        updateStatus(status){\r\n            return  instance.put(`profile/status/`,{status})\r\n        },\r\n    savePhoto(photos){\r\n        const formData = new FormData();\r\n        formData.append('image',photos)\r\n        return instance.put(`profile/photo`,formData,{\r\n            headers: {\r\n                'content-type': 'multipart/form-data'\r\n            }\r\n        })\r\n    },\r\n    updateProfile(profile){\r\n        return  instance.put(`profile`,profile)\r\n    }\r\n\r\n}\r\nexport const SecurityAPI = {\r\n    getCaptcha(){\r\n        return instance.get(`security/get-captcha-url`);\r\n    }}\r\n\r\n\r\n","import {usersAPI} from \"../api/api\";\r\n\r\nconst FOLLOW = \"FOLLOW\";\r\nconst UNFOLLOW = \"UNFOLLOW\";\r\nconst SET_USERS = \"SET_USERS\";\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\r\nconst SET_TOTAL_USERS_COUNT =\"SET_TOTAL_USERS_COUNT\";\r\nconst TOGGLE_IS_FETCHING =\"TOGGLE_IS_FETCHING\";\r\nconst FOLLOWING_IN_PROGRESS= \"FOLLOWING_IN_PROGRESS\";\r\n\r\nlet InitialState ={\r\nusers:[],\r\npageSize: 5,\r\ntotalUsersCount: 60,\r\ncurrentPage:1,\r\n    portionSize:10,\r\nisFetching : false,\r\nfollowProgress: []\r\n\r\n};\r\n\r\n\r\nlet usersReducer=(state = InitialState,action)=> {\r\n    switch (action.type) {\r\n        case FOLLOW:{\r\n            return{\r\n                ...state,\r\n                users: state.users.map(u=>{\r\n                    if(u.id===action.usersId){\r\n                        u={...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })\r\n\r\n            }\r\n        }\r\n        case UNFOLLOW:{\r\n            return{\r\n                ...state,\r\n                users: state.users.map(u=>{\r\n                    if(u.id===action.usersId){\r\n                        u={...u, followed: false}\r\n                    }\r\n                    return u;\r\n                })\r\n\r\n            }\r\n        }\r\n        case SET_USERS:{\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n        }\r\n        case SET_CURRENT_PAGE:{\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        }\r\n        case SET_TOTAL_USERS_COUNT:{\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.totalUsersCount\r\n            }\r\n        }\r\n        case TOGGLE_IS_FETCHING:{\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        }\r\n        case FOLLOWING_IN_PROGRESS:{\r\n            return {\r\n                ...state,\r\n                followProgress: action.isFetching?\r\n                    [...state.followProgress, action.userId]\r\n                    :  state.followProgress.filter(id=> id !== action.userId)\r\n\r\n\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n\r\nexport const followS=(usersId)=>{\r\n    return{type: FOLLOW, usersId}\r\n\r\n}\r\nexport const unfollowS=(usersId)=>{\r\n    return{type: UNFOLLOW, usersId}\r\n}\r\nexport const setUsers=(users)=>{\r\n    return{type: SET_USERS,users}\r\n}\r\nexport const setCurrentPage=(currentPage)=>{\r\n    return{type: SET_CURRENT_PAGE, currentPage}\r\n}\r\nexport const setTotalUsersCount=(totalUsersCount)=>{\r\n    return{type: SET_TOTAL_USERS_COUNT, totalUsersCount}\r\n}\r\nexport const setToggleFetching=(isFetching)=>{\r\n    return{type: TOGGLE_IS_FETCHING, isFetching}\r\n}\r\nexport const followingInProgress=(isFetching, userId)=>{\r\n    return{type: FOLLOWING_IN_PROGRESS, isFetching, userId}\r\n}\r\nexport const getUsers = (currentPage,pageSize) => {\r\n    return (dispatch) => {\r\n        dispatch(setCurrentPage(currentPage));\r\n        dispatch(setToggleFetching(true))\r\n        usersAPI.getUsers(currentPage, pageSize).then(data => {\r\n            dispatch(setToggleFetching(false))\r\n            dispatch(setUsers(data.items));\r\n            dispatch(setTotalUsersCount(data.totalCount));\r\n        });\r\n    }\r\n}\r\nexport const follow = (userId) =>{\r\n    return(dispatch) =>{\r\n        dispatch(followingInProgress(true,userId));\r\n        usersAPI.follow(userId)\r\n            .then(response => {\r\n                if(response.data.resultCode===0){\r\n                    dispatch(followS(userId));\r\n                }\r\n                dispatch(followingInProgress(false,userId));\r\n            });\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId) =>{\r\n    return(dispatch) =>{\r\n        dispatch(followingInProgress(true,userId));\r\n        usersAPI.unfollow(userId)\r\n            .then(response => {\r\n                if(response.data.resultCode===0){\r\n                    dispatch(unfollowS(userId));\r\n                }\r\n                dispatch(followingInProgress(false,userId));\r\n            });\r\n    }\r\n}\r\n\r\n\r\nexport default usersReducer;","\r\nimport { createSelector } from 'reselect';\r\n\r\nconst getUsers = (state) =>{\r\n    return (state.UsersPage.users);\r\n};\r\n\r\nexport const getAllUsers = createSelector(getUsers,(users)=>{\r\n    return(users)\r\n});\r\nexport const getPageSize = (state)=>{\r\n    return (state.UsersPage.pageSize)\r\n};\r\nexport const getTotalUsersCount = (state)=>{\r\n    return(state.UsersPage.totalUsersCount)\r\n};\r\nexport const getCurrentPage = (state)=>{\r\n    return(state.UsersPage.currentPage)\r\n};\r\nexport const getIsFetching = (state)=>{\r\n    return(state.UsersPage.isFetching)\r\n};\r\nexport const getFollowProgress = (state)=>{\r\n    return(state.UsersPage.followProgress)\r\n};","import React, {useState} from \"react\";\r\nimport s from './Paginator.module.css'\r\nimport cn from 'classnames'\r\nconst Paginator =(props,{portionSize=10})=> {\r\n    let totalPagesCount = Math.ceil(props.totalUsersCount/props.pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= totalPagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    let portionCount = Math.ceil(totalPagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1)\r\n    let leftBorder = (portionNumber - 1) * portionSize + 1;\r\n    let rightBorder = portionNumber * portionSize;\r\n    let newCurrentPage = (leftBorder)=>{\r\n        props.onClickChanged(leftBorder+portionSize);\r\n    }\r\n    let prevCurrentPage = (leftBorder)=>{\r\n\r\n        props.onClickChanged(leftBorder-portionSize);\r\n    }\r\n    return(\r\n    <div>\r\n        <div className={s.buttonsContainer}>\r\n        {portionNumber > 1 && <button className={s.controlButton} onClick={() => {\r\n            setPortionNumber(portionNumber - 1);\r\n            prevCurrentPage(leftBorder)\r\n        }}>PREV</button>}\r\n        <div>\r\n            {\r\n                pages.filter(p => p >= leftBorder && p <= rightBorder)\r\n                    .map(p =>\r\n                        <button onClick={() => props.onClickChanged(p)}\r\n                                className={cn(s.button, (props.currentPage === p && s.selectedPage))} key={p}>{p}\r\n                        </button>)\r\n            }\r\n\r\n        </div>\r\n        {portionCount > portionNumber &&\r\n        <button className={s.controlButton} onClick={() => {\r\n            setPortionNumber(portionNumber + 1);\r\n            newCurrentPage(leftBorder)\r\n        }}>NEXT</button>\r\n\r\n        }\r\n        </div>\r\n    </div>)\r\n}\r\nexport default Paginator;","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\n\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {followingInProgress} from \"../../redux/usersReducer\";\r\nimport {follow} from \"../../redux/usersReducer\";\r\nimport {unfollow} from \"../../redux/usersReducer\";\r\nimport {getUsers} from \"../../redux/usersReducer\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowProgress,\r\n    getIsFetching,\r\n} from \"../../redux/usersSelectors\";\r\nimport Paginator from \"./Pagitanor\";\r\n\r\nclass UsersContainer extends React.Component{\r\n\r\n    componentDidMount() {\r\n       this.props.getUsers(this.props.currentPage, this.props.pageSize)\r\n    }\r\n\r\n    onClickChanged = (currentPage) =>{\r\n        this.props.getUsers(currentPage, this.props.pageSize)\r\n\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n        <Paginator totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   onClickChanged={this.onClickChanged}\r\n                   currentPage={this.props.currentPage}/>\r\n            {this.props.isFetching? <Preloader/>:\r\n            <Users\r\n                      users={this.props.users}\r\n                      unfollow={this.props.unfollow}\r\n                      follow={this.props.follow}\r\n                   followingInProgress={this.props.followingInProgress}\r\n                   followProgress={this.props.followProgress}\r\n                   portionSize={this.props.portionSize}\r\n        > </Users>}\r\n            </>\r\n    }\r\n}\r\nlet mapStateToProps = (state) =>{\r\n    return {\r\n       users: state.UsersPage.users,\r\n        pageSize: state.UsersPage.pageSize,\r\n        totalUsersCount:state.UsersPage.totalUsersCount,\r\n        currentPage:getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followProgress:getFollowProgress(state),\r\n        portionSize:state.UsersPage.portionSize\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,{followingInProgress,getUsers,follow,unfollow})(UsersContainer);\r\n\r\n\r\n","import style from \"./ProlifeStatus.module.css\"\r\nimport React from \"react\";\r\n\r\nclass ProfileStatus extends React.Component{\r\n    state={\r\n        editMode: false,\r\n        status:this.props.status\r\n    }\r\n\r\n    onStatusChange =(e)=>{\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n    })\r\n    };\r\n    ActivateEditMode=()=>{\r\n        if(!this.props.isOwner || this.props.isOwner===this.props.authorizedUserID) {\r\n            this.setState({\r\n                    editMode: true\r\n                }\r\n            )\r\n        }\r\n    }\r\n\r\n    DeactivateEditMode=()=>{\r\n        this.setState({\r\n                editMode: false\r\n        },\r\n            this.props.updateStatus(this.state.status)\r\n\r\n        )\r\n    }\r\ncomponentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps!==this.props) {\r\n            this.setState({\r\n                status: this.props.status\r\n            })\r\n        }\r\n}\r\n\r\n    render() {\r\n      return <div>\r\n          <div className={style.mainContainer}>\r\n              {!this.state.editMode&& <div>\r\n                  <span onDoubleClick={this.ActivateEditMode} className={style.statusText}>{this.props.status}</span>\r\n              </div>}\r\n              { this.state.editMode&&\r\n              <div>\r\n                  <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.DeactivateEditMode} value={this.state.status}/>\r\n              </div>}\r\n          </div>\r\n\r\n      </div>\r\n  }\r\n}\r\nexport default ProfileStatus;\r\n","import React, {useState} from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Element} from \"../../FormsControls/FormsControls\";\r\nimport styles from \"../../FormsControls/FormsControls.module.css\";\r\nimport s from './ProfileFormData.module.css'\r\n\r\nconst Input = Element(\"input\")\r\nconst ProfileDataForm = (props)=> {\r\n\r\n    return(\r\n        <div className={s.container}>\r\n\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div className={s.buttons}><div> <button className={s.btn} type={\"submit\"}>save</button></div>\r\n                <div> <button onClick={props.onCancel} className={s.btn}>cancel</button></div></div>\r\n\r\n            {(props.error)?<div className={styles.spanError}>{props.error}</div>:undefined}\r\n            About me: <Field type=\"text\" name=\"aboutMe\" placeholder=\"\" component={Input} />\r\n            Your fullname <Field type=\"text\" name=\"fullName\" placeholder=\"\" component={Input} />\r\n            Are you looking for a job? <Field type=\"checkbox\" name=\"lookingForAJob\" placeholder=\"\" component={Input} />\r\n            Please tell us about your skills  <Field type=\"text\" name=\"lookingForAJobDescription\" placeholder=\"\" component={Input} />\r\n            You in social networks\r\n            {Object.entries(props.profile.contacts).map(([key,value])=>{\r\n                return <Field type=\"text\" name={'contacts.'+key} placeholder={key} component={Input} key={key} />\r\n\r\n            })\r\n\r\n            }\r\n\r\n\r\n\r\n\r\n        </form>\r\n        </div>)\r\n}\r\nconst ProfileDataFormRedux = reduxForm(\r\n    {form:\"profileData\"}\r\n)(ProfileDataForm);\r\nexport default ProfileDataFormRedux;","import s from \"./ProfileInfo.module.css\";\r\nimport React, {useState} from \"react\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus/ProfileStatus\";\r\nimport ProfileDataForm from \"./ProfileFormData\";\r\nconst ProfileInfo =(props)=> {\r\n    const [editMode,setEditMode]= useState(false)\r\n\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    function onPhotoSelected(e) {\r\n        if (e.target.files.length) {\r\n            props.savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n    const Contact = ({contactTitle, contactValue})=>{\r\n        return <div> {contactTitle}:{contactValue}</div>\r\n    }\r\n\r\n    const onSubmit = (profileData)=>{\r\n        props.updateProfile(profileData)\r\n        setEditMode(false)\r\n    }\r\n    const onCancel = ()=>{\r\n        setEditMode(false)\r\n    }\r\n\r\n    const ProfileData = (props) =>{\r\n        return(    <div>\r\n            <p> About user: {props.profile.aboutMe} </p>\r\n            <p> Looking for a job: {props.profile.lookingForAJob===true?<span>yes</span>: <span>no</span>} </p>\r\n            <div>Description: {props.profile.lookingForAJobDescription===null?<p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Consequuntur corporis dolorum est eum ex inventore, ipsa laudantium minus nemo tempora.</p>:props.profile.lookingForAJobDescription}</div>\r\n            <div>\r\n\r\n                <p>Contacts:</p>\r\n                {  Object.entries(props.profile.contacts).map(([key,value])=>{\r\n                    return value?<Contact contactTitle={key} contactValue={value} key={key}/>:null\r\n                })\r\n\r\n                }\r\n\r\n            </div>{/*./Contacts*/}\r\n\r\n        </div>)\r\n    }\r\n\r\n    function onClick(editMode) {\r\n            return setEditMode(true)\r\n    }\r\n    const SelectPhoto = ()=>{\r\n        return <input type={\"file\"} onChange={onPhotoSelected}/>\r\n    }\r\n\r\n    return(\r\n        <div >\r\n<div className={s.container}>\r\n<div className={s.box}>\r\n        <div className={s.background}>\r\n            {props.profile.photos.small==null?   <img src={\"https://i.pinimg.com/originals/a9/d0/96/a9d096ac9430a4f297ed99d42861ae9d.jpg\"} className={s.avatar}/>:  <img src={props.profile.photos.small } className={s.avatar}/>}\r\n            <div>  {(!props.isOwner || props.isOwner===props.authorizedUserID) && <SelectPhoto/>}</div>\r\n            <div className={s.userName}>{props.profile.fullName}</div>\r\n        </div>\r\n\r\n    <div>\r\n       <ProfileStatus updateStatus={props.updateStatus}  status={props.status} authorizedUserID={props.authorizedUserID} isOwner={props.isOwner}/>\r\n    </div>\r\n    {editMode?<ProfileDataForm profile={props.profile} onSubmit={onSubmit} onCancel={props.onCancel}/>:<div><ProfileData profile={props.profile}/>{(!props.isOwner || props.isOwner===props.authorizedUserID)&&<button onClick={onClick} className={s.btn}>edit</button>}</div>}\r\n\r\n</div>\r\n\r\n        </div>\r\n\r\n    </div>);\r\n}\r\nexport default ProfileInfo;\r\n","import {ProfileAPI, usersAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\nconst ADD_POST = 'ADD_POST';\r\nconst ADD_LIKE =\"ADD_LIKE\";\r\n\r\nconst SET_USER_PROFILE='SET_USER_PROFILE';\r\nconst SET_PROFILE_STATUS='SET_PROFILE_STATUS';\r\nconst SAVE_PHOTO = 'SAVE_PHOTO'\r\nconst picture = \"https://klike.net/uploads/posts/2019-03/1551511784_4.jpg\"\r\nlet InitialState ={\r\n   profile: null,\r\n    status:null,\r\n    postData :[{massege:\"Hi there, I'm a new user\", kartinka: picture, likes:201, id:1,liked:false},\r\n        {massege:'Have a nice day to everyone' ,kartinka:picture ,likes:15,id:2,liked: false},\r\n        {massege:'I want to get an awesome experience' ,kartinka:picture ,likes:64,id:3,liked:false}],\r\n    buttonDef: \"like\"\r\n}\r\n\r\n\r\nlet profileReducer=(state = InitialState,action)=> {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n        {\r\n            let NewPost = {\r\n                massege: action.newPostText,\r\n                kartinka: \"https://klike.net/uploads/posts/2019-03/1551511784_4.jpg\",\r\n                likes: 12\r\n            };\r\n            return  {...state,\r\n                postData:[...state.postData,NewPost],\r\n            };\r\n        }\r\n        case ADD_LIKE:{\r\n            return {\r\n                ...state,\r\n                postData: state.postData.map(u=>{\r\n                    if(u.id===action.postId && u.liked=== false){\r\n                        u={...u, likes: u.likes + 1, liked: true}\r\n                    }\r\n                    else if(u.id===action.postId && u.liked=== true){\r\n                        u={...u, likes: u.likes - 1, liked: false}\r\n                    }\r\n                    return u;\r\n                })\r\n\r\n            }\r\n            }\r\n        case SET_USER_PROFILE:{\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        }\r\n        case SET_PROFILE_STATUS:{\r\n           return {\r\n               ...state,\r\n               status: action.status\r\n           }\r\n        }\r\n        case SAVE_PHOTO:{\r\n            return {\r\n                ...state,\r\n                profile: {...state.profile, photos: action.photos}\r\n            }\r\n        }\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator=(newPostText)=>{\r\n    return{type: ADD_POST,newPostText}\r\n\r\n}\r\nexport const addLikeAC = (postId) =>{\r\n    return{type:ADD_LIKE, postId }\r\n}\r\nexport const setUserProfile = (profile)=>{\r\n    return{type:SET_USER_PROFILE, profile}\r\n}\r\nexport const getUserProfile = (userId) =>{\r\n   return (dispatch)=>{\r\n       usersAPI.setProfile(userId).then(response => {\r\n          dispatch(setUserProfile(response.data));\r\n       });\r\n    }\r\n}\r\nexport const setProfileStatus =(status)=>{\r\n    return{type: SET_PROFILE_STATUS, status }\r\n\r\n}\r\nexport const savePhotoSuccess = (photos)=>{\r\n    return{type:SAVE_PHOTO, photos}\r\n}\r\nexport const getProfileStatus = (userId) =>{\r\n    return(dispatch)=>{\r\n        ProfileAPI.getStatus(userId).then(response=>{\r\n            dispatch(setProfileStatus(response.data))\r\n        })\r\n    }\r\n}\r\nexport const updateStatus =(status)=>{\r\n    return(dispatch)=>{\r\n        ProfileAPI.updateStatus(status).then(response=>{\r\n            if(response.data.resultCode===0){\r\n                dispatch(setProfileStatus(status))\r\n            }\r\n        })\r\n    }\r\n}\r\nexport const savePhoto =(file)=> (dispatch)=> {\r\n        ProfileAPI.savePhoto(file).then(response =>{\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(savePhotoSuccess(response.data.data.photos))\r\n        }})\r\n\r\n}\r\nexport const updateProfile =(profile)=>{\r\n    return(dispatch,getState)=>{\r\n        const userId = getState().auth.id\r\n        ProfileAPI.updateProfile(profile).then(response=>{\r\n            if(response.data.resultCode===0){\r\n                dispatch(getUserProfile(userId))\r\n            }\r\n            else {\r\n                const message = (response.data.messages.length>0)? response.data.messages[0]: \"Something wrong\"\r\n                dispatch(stopSubmit(\"profileData\",{_error:message}));\r\n            }\r\n        })\r\n    }\r\n}\r\nexport default profileReducer;","import React from 'react';\r\nimport a from './Post.module.css';\r\n\r\nconst  Post= (props) => {\r\n\r\n    return (\r\n        props.postData.map(u => <div key={u.id}>\r\n\r\n        <div className={a.item}>\r\n\r\n            <div className={a.container}>\r\n            <div className={a.avatar}>\r\n            <img src={u.kartinka}/>\r\n            </div>\r\n            <div>\r\n            {u.massege}\r\n            </div>\r\n            </div>\r\n            <span>\r\n               {u.likes} likes <button className={a.shareButton} onClick={() => {\r\n                props.addLike(u.id)\r\n            }}>\r\n                {u.liked\r\n                    ? <i className=\"fas fa-heart\"> </i>\r\n                    :<i className=\"far fa-heart\"> </i>\r\n                }\r\n\r\n                \r\n                </button>\r\n            </span>\r\n\r\n    </div>\r\n            </div>\r\n         ));\r\n}\r\nexport default Post;\r\n","import React from 'react';\r\nimport a from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\n\r\nimport {Element} from '../../FormsControls/FormsControls';\r\nconst Textarea = Element('textarea')\r\n\r\nconst maxLength = max => value =>\r\n    value && value.length > max ? `Must be ${max} characters or less` : undefined\r\nconst maxLength30 = maxLength(30);\r\n\r\nconst MyPosts = (props) => {\r\n    let addingPost = (value) => {\r\n        props.addPost(value.newPostText);\r\n    };\r\n    return (\r\n\r\n        <div className={a.container}>\r\n            <div className={a.newPost}>\r\n                <div className={a.myPost}>\r\n                    My posts\r\n                </div>\r\n                <AddPostRedux onSubmit={addingPost}/>\r\n            </div>\r\n            <div className={a.posts}>\r\n                <Post\r\n                    postData={props.postData}\r\n                    addLike={props.addLike}\r\n                    buttonDef={props.buttonDef}\r\n                    profile={props.profile}\r\n                />\r\n            </div>\r\n        </div>);\r\n}\r\n\r\nlet AddPost = (props)=>{\r\n\r\n    return(<form onSubmit={props.handleSubmit}>\r\n            <Field validate={[ maxLength30]} name={\"newPostText\"} component={Textarea}  className={a.textarea}/>\r\n            <button type={\"submit\"} className={a.shareButton}>Submit </button>\r\n    </form>)\r\n};\r\nlet AddPostRedux = reduxForm({form:\"addPost\"})(AddPost);\r\n\r\nexport default MyPosts;\r\n","import React from 'react';\r\nimport {addLikeAC, addPostActionCreator} from \"../../../redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) =>{\r\n   return {\r\n\r\n       postData: state.ProfilePage.postData,\r\n       newPostText:state.ProfilePage.newPostText,\r\n       buttonDef:state.ProfilePage.buttonDef,\r\n      profile:state.ProfilePage.profile\r\n   }\r\n}\r\nconst MyPostsContainer = connect(mapStateToProps,{addPost:addPostActionCreator, addLike:addLikeAC})(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React from 'react';\r\nimport a from './ProfileCom.module.css';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./My posts/MyPostsContainer\";\r\n\r\nconst ProfileCom = (props) => {\r\n    return (\r\n        <div className={a.container}>\r\n            <ProfileInfo profile={props.profile} status={props.status}\r\n                         updateStatus={props.updateStatus} authorizedUserID={props.authorizedUserID}\r\n                         savePhoto={props.savePhoto} updateProfile={props.updateProfile} isOwner={props.isOwner}/>\r\n            <MyPostsContainer/>\r\n\r\n        </div>);\r\n}\r\nexport default ProfileCom;\r\n","import React from 'react';\r\nimport ProfileCom from \"./ProfileCom\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {getProfileStatus, getUserProfile, savePhoto, updateProfile, updateStatus} from \"../../redux/profileReducer\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileComContainer extends React.Component{\r\n\r\nrefreshProfile(){\r\n    let userId = this.props.match.params.userId;\r\n    if(!userId){\r\n        userId = this.props.authorizedUserID;\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getProfileStatus(userId);\r\n\r\n}\r\n    componentDidMount() {\r\n\r\n        this.refreshProfile()\r\n}\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(<ProfileCom savePhoto={this.props.savePhoto}  profile={this.props.profile} status={this.props.status}\r\n                           updateStatus={this.props.updateStatus} authorizedUserID={this.props.authorizedUserID}\r\n                           updateProfile={this.props.updateProfile} isOwner={this.props.match.params.userId}/>)\r\n    }\r\n}\r\nlet mapStateToProps =(state) =>{\r\n    return {\r\n        profile: state.ProfilePage.profile,\r\n        status:state.ProfilePage.status,\r\n        authorizedUserID:state.auth.id\r\n    }\r\n}\r\n export default compose(\r\n     connect (mapStateToProps,{getUserProfile,getProfileStatus,updateStatus,savePhoto,updateProfile}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileComContainer)","import {authAPI, SecurityAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\n;\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\nconst GET_CAPTCHA_URL = `GET_CAPTCHA_URL`;\r\nlet InitialState ={\r\n    data: {\r\n        id: null,\r\n        email: null,\r\n        login: null,\r\n        isAuth:false,\r\n        photo: null,\r\n        captchaUrl: null\r\n    }\r\n};\r\n\r\nlet authReducer =(state = InitialState,action)=> {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:{\r\n            return  {...state,\r\n               ...action.data\r\n            };\r\n        }\r\n        case GET_CAPTCHA_URL:{\r\n            debugger\r\n            return {\r\n                ...state,\r\n                captchaUrl: action.captchaUrl\r\n\r\n            }\r\n\r\n        }\r\n        default: return state;\r\n    }\r\n\r\n};\r\nexport let setUserAuthData = (id, email, login, isAuth)=>{\r\n    return{\r\n        type:SET_USER_DATA,\r\n        data:{ id,email,login,isAuth}\r\n    }\r\n};\r\nexport const getUserAuthData = () =>\r\n     (dispatch)=>{\r\n         return authAPI.authme().then(response => {\r\n            if(response.data.resultCode===0) {\r\n                let {id,email,login} = response.data.data;\r\n                dispatch(setUserAuthData(id,email,login,true));\r\n            }\r\n        });\r\n\r\n};\r\nexport const login = (email,password,rememberMe,captcha) =>{\r\n\r\n    return (dispatch)=>{\r\n        authAPI.login(email,password,rememberMe,captcha).then(response => {\r\n            if(response.data.resultCode===0) {\r\n                dispatch(getUserAuthData());\r\n            }\r\n            else {\r\n                if(response.data.resultCode===10){\r\n                    dispatch(getCaptchaUrl())\r\n                }\r\n                let massege = response.data.messages.length>0?response.data.messages[0]:\"Some error\";\r\n                dispatch(stopSubmit(\"login\",{_error:massege}));\r\n\r\n            }\r\n\r\n\r\n\r\n        });\r\n    }\r\n};\r\nexport const setCaptchaSuccess = (captchaUrl)=>{\r\n    return{\r\n        type:GET_CAPTCHA_URL,\r\n        captchaUrl\r\n    }\r\n};\r\nexport const getCaptchaUrl = ()=>{\r\n    return (dispatch)=>{\r\n        SecurityAPI.getCaptcha().then(response =>{\r\n            debugger\r\n            const captchaUrl = response.data.url;\r\n            dispatch(setCaptchaSuccess(captchaUrl))\r\n        })\r\n\r\n    }\r\n}\r\nexport const logout = () =>{\r\n    return (dispatch)=>{\r\n        authAPI.logout().then(response => {\r\n            if(response.data.resultCode===0) {\r\n                dispatch(setUserAuthData(null,null,null,false));\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\nexport default authReducer;\r\n\r\n","import React from \"react\";\r\nimport style from \"./LoginPage.module.css\"\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Element} from \"../FormsControls/FormsControls\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport styles from \"./../FormsControls/FormsControls.module.css\"\r\nimport s from './LoginPage.module.css'\r\nimport classNames from 'classnames'\r\nconst Input = Element(\"input\")\r\nexport const required = (value) => (value  ?  undefined : 'Required');\r\nconst Loginpage = (props) =>{\r\n    let onSubmit = (value)=>{\r\n        props.login(value.email,value.password,value.rememberMe, value.captcha)\r\n    }\r\n    if (props.isAuth){\r\n        return (\r\n            <Redirect to={\"/profile\"}/>\r\n        )\r\n    }\r\n    return(<div>\r\n        <div className={style.container}>\r\n           <div><p className={style.loginText}> LOGIN</p></div>\r\n            <LoginReduxForm  onSubmit={onSubmit} captchaUrl={props.captchaUrl}/>\r\n</div>\r\n    </div>)\r\n};\r\nconst LoginForm = (props) =>{\r\n    return(\r\n        <form onSubmit={props.handleSubmit}>\r\n        <Field type=\"login\" name=\"email\" placeholder=\"your login\" component={Input} validate={ required }/>\r\n        <Field type=\"password\" name=\"password\" placeholder=\"your password\" component={Input} validate={ required }/>\r\n        <Field type=\"checkbox\" name=\"rememberMe\" component={\"input\"}/> remember me\r\n            {(props.error)?<div className={styles.spanError}>{props.error}</div>:<></>}\r\n            {props.captchaUrl && <div><img src={props.captchaUrl} alt={\"captcha\"}/><div><Field type=\"text\" name=\"captcha\" placeholder={\"enter symbols what you see\"} component={\"input\"}/></div> </div>}\r\n        <button type=\"submit\" className={buttonClasses }>Submit</button>\r\n    </form>)\r\n};\r\nconst buttonClasses = classNames(s.btn,s.btnSpecial)\r\nconst LoginReduxForm = reduxForm({\r\n    form: \"login\"\r\n})(LoginForm);\r\nconst mapStateToProps =(state)=>{\r\n    return{\r\n        isAuth:state.auth.isAuth,\r\n        captchaUrl: state.auth.captchaUrl\r\n    }\r\n}\r\nexport default connect(mapStateToProps,{login}) (Loginpage);","import {getUserAuthData} from \"./auth-reducer\";\r\nconst INITIALIZE_DONE = 'INITIALIZE_DONE';\r\n\r\nlet InitialState ={\r\n    initialized:false\r\n};\r\n\r\nlet appReducer =(state = InitialState,action)=> {\r\n    switch (action.type) {\r\n        case INITIALIZE_DONE:{\r\n            return  {...state,\r\n                initialized:true\r\n            };\r\n        }\r\n        default: return state;\r\n    }\r\n};\r\nexport let initialize = ()=>{\r\n    return{\r\n        type:INITIALIZE_DONE\r\n    }\r\n};\r\nexport const initializeApp = () => (dispatch)=>{\r\nconst promise = dispatch(getUserAuthData());\r\n//const promiseTheme = dispatch(getTheme());\r\nPromise.all([promise]).then(()=>{\r\n    dispatch(initialize())\r\n})\r\n    }\r\n\r\n\r\nexport default appReducer;\r\n\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport dialogsReducer from \"./dialogsReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {reducer as formReducer} from \"redux-form\";\r\nimport appReducer from \"./appReducer\";\r\n\r\nlet reducers = combineReducers(\r\n    {ProfilePage:profileReducer,\r\n             MassagePage:dialogsReducer,\r\n             UsersPage: usersReducer,\r\n             auth:authReducer,\r\n             form: formReducer,\r\n             appCommon: appReducer\r\n    }\r\n    );\r\nlet store = createStore(reducers,applyMiddleware(thunkMiddleware));\r\nwindow.store = store;\r\nexport default store;","import React from \"react\";\r\nimport s from './Footer.module.css'\r\n\r\nconst Footer = (props)=>{\r\n    return(<div>\r\n        <div className={s.footerContainer}>\r\n        <div className={s.authorInfo}>\r\n            site design / logo © 2020 Igor Selin; All rights aren't received\r\n        </div>\r\n        </div>\r\n    </div>)\r\n}\r\nexport default Footer","import React from 'react';\r\nimport s from './Setting.module.css'\r\n\r\nconst Setting = ()=> {\r\n    return (\r\n        <div className={s.settingsContainer}>\r\n            <div> In processing</div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default Setting;\r\n","import React from 'react';\r\nimport n from './Header.module.css';\r\nimport s from './Nav.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\nimport $ from \"jquery\"\r\n\r\nclass HeaderWithNavigation extends React.Component {\r\n    componentDidMount() {\r\n        $(function (){\r\n            let inner =$(\"#inner\")\r\n            let headerH = inner.innerHeight();\r\n\r\n\r\n            $(window).on(\"scroll resize load\",function (){\r\n                let scrollPos = $(window).scrollTop();\r\n                if(scrollPos > headerH){\r\n                inner.addClass(s.fixed)\r\n\r\n            }\r\n        else {\r\n                    inner.removeClass(s.fixed)\r\n            }\r\n            })\r\nlet container = $(\"#container\");\r\n            $(\"#toggleMenu\").on(\"click\", function (event){\r\n\r\n                event.preventDefault();\r\n                container.toggleClass(s.show)\r\n\r\n            });\r\n            $(\"#container:only-child\").on(\"click\", function (){\r\n                container.removeClass(s.show)\r\n            })\r\n\r\n        })\r\n    }\r\n    render() {\r\n\r\n\r\n        return (<div>\r\n            <div id={\"inner\"}>\r\n            {/*HeaderWithNavigation*/}\r\n            <header className={n.Header}>\r\n                <div>\r\n                    <div className={n.logoContainer}>\r\n                        <div><img alt={\"logo\"}\r\n                            src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/4/4a/Inkscape.logo.svg/390px-Inkscape.logo.svg.png\"/>\r\n                        </div>\r\n                        <div className={n.nameLogo}>Keetouch</div>\r\n                    </div>\r\n\r\n                </div>\r\n              <button className={s.burger}>  <div  id={\"toggleMenu\"}><i className=\"fas fa-bars\"></i></div></button>\r\n\r\n            </header>\r\n            <nav className={s.Nav} id={\"nav\"}>\r\n                <div>\r\n                    <div className={s.Container} id={\"container\"} >\r\n                            <NavLink to=\"/profile\" className={s.nav} activeClassName={s.active} id={\"navItem\"}>Profile</NavLink>\r\n\r\n                            <NavLink to=\"/messages\" className={s.nav} activeClassName={s.active} id={\"navItem\"}>Messages</NavLink>\r\n                            <NavLink to=\"/users\" className={s.nav} activeClassName={s.active} id={\"navItem\"}> Users</NavLink>\r\n\r\n                            <NavLink to=\"/music\" className={s.nav} activeClassName={s.active} id={\"navItem\"}>Music</NavLink>\r\n\r\n\r\n                            <NavLink to=\"/setting\" className={s.nav} activeClassName={s.active} id={\"navItem\"}> Setting</NavLink>\r\n                            {\r\n                                this.props.isAuth ?\r\n\r\n                                    <NavLink to={\"#\"} className={s.nav} onClick={this.props.logout} id={\"navItem\"}>Exit</NavLink>\r\n                                    :\r\n                                    <NavLink className={s.nav} to={\"/login\"} id={\"navItem\"}>Login</NavLink>\r\n                            }\r\n\r\n\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n            </div>\r\n        </div>);\r\n    }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n        return {\r\n            isAuth:state.auth.isAuth,\r\n\r\n        }\r\n    }\r\n\r\n    export default connect(mapStateToProps,{ logout})(HeaderWithNavigation)\r\n","import React from 'react';\r\nimport './App.css';\r\nimport  {BrowserRouter, Route} from \"react-router-dom\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport  {withRouter} from \"react-router-dom\";\r\nimport Music from \"./contonents/Music/Music\";\r\nimport MessagesContainer from \"./contonents/Masseges/MassegesContainer\";\r\nimport UsersContainer from \"./contonents/Users/UsersContainer\";\r\nimport ProfileComContainer from \"./contonents/ProfileCom/ProfileComContainer\";\r\nimport LoginPage from \"./contonents/login/Loginpage\";\r\nimport {connect, Provider} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {initializeApp} from \"./redux/appReducer\";\r\nimport Preloader from \"./contonents/common/Preloader/Preloader\";\r\nimport store from \"./redux/redux-store\";\r\nimport Footer from \"./contonents/Footer/Footer\";\r\nimport Setting from \"./contonents/Setting/Setting\";\r\nimport Header from \"./contonents/Header/HeaderWithNavigation\";\r\n\r\nclass App extends React.Component {\r\n\r\n\r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n    }\r\n\r\n    render() {\r\n        if(!this.props.initialized){\r\n            return <Preloader/>\r\n        }\r\n        return (\r\n            <div className=\"app-wrapper\">\r\n                <Header/>\r\n                <div className=\"app-wrapper-content\">\r\n                    <Route path={\"/react-social-network\" && \"/\" } render={() => <Redirect to={\"/profile\"}/>}/>\r\n                    <Route path={\"/profile/:userId?\"} render={() => <ProfileComContainer/>}/>\r\n                    <Route path='/messages' render={() => <MessagesContainer/>}/>\r\n                    <Route path='/users' render={() => <UsersContainer/>}/>\r\n                    <Route path=\"/music\" component={Music}/>\r\n                    <Route path='/login' render={() => <LoginPage/>}/>\r\n                    <Route path='/setting' render={()=><Setting/>}/>\r\n                </div>\r\n                <Footer/>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps =(state)=>({\r\n    initialized: state.appCommon.initialized,\r\n})\r\n\r\nconst AppContainer = compose(\r\n    withRouter,\r\nconnect(mapStateToProps,{initializeApp})) (App);\r\nconst MainApp = ()=>{\r\n    return(<BrowserRouter>\r\n        <link rel=\"stylesheet\" href=\"https://use.fontawesome.com/releases/v5.6.1/css/all.css\"\r\n              integrity=\"sha384-gfdkjb5BdAXd+lj+gudLWI+BXq4IuLW5IT+brZEZsLFm++aCMlF1V92rMkPaX4PP\"\r\n              crossOrigin=\"anonymous\"/>\r\n        <link href=\"https://fonts.googleapis.com/css2?family=Lato:ital,wght@0,300;0,400;0,700;1,300;1,400;1,700&family=Notable&family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,300;1,400;1,500;1,700;1,900&display=swap\" rel=\"stylesheet\"/>\r\n        <Provider store={store}>\r\n            <AppContainer/>\r\n        </Provider> </BrowserRouter>)\r\n}\r\nexport default MainApp","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport MainApp from \"./App\";\r\n\r\n\r\nReactDOM.render(<MainApp/>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ProfileInfo_container__1_p0L\",\"background\":\"ProfileInfo_background__3w3Tb\",\"avatar\":\"ProfileInfo_avatar__94gwH\",\"userName\":\"ProfileInfo_userName__dvTmu\",\"btn\":\"ProfileInfo_btn__2Ur7K\",\"bnt\":\"ProfileInfo_bnt__1ggGH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"FormsControls_error__2VFQj\",\"spanError\":\"FormsControls_spanError__1Mq62\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"DialogItem_dialogs__j5aoV\",\"photo\":\"DialogItem_photo__1ZyNr\",\"kartinka\":\"DialogItem_kartinka__38DFl\",\"nameDialog\":\"DialogItem_nameDialog__20G0F\",\"active\":\"DialogItem_active__1bIbB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"MyPosts_container__1KYtV\",\"textarea\":\"MyPosts_textarea__3jVek\",\"myPost\":\"MyPosts_myPost__3qUC0\",\"shareButton\":\"MyPosts_shareButton__3Puxw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginText\":\"LoginPage_loginText__2cd9n\",\"container\":\"LoginPage_container__Z1pGd\",\"btn\":\"LoginPage_btn__1s6sA\",\"btnSpecial\":\"LoginPage_btnSpecial__hjrYd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainMessages\":\"Masseges_mainMessages__3kc2j\",\"dialogsContainer\":\"Masseges_dialogsContainer__btPRW\",\"textarea\":\"Masseges_textarea__36MHu\",\"dialogs\":\"Masseges_dialogs__3AtMl\",\"shareButton\":\"Masseges_shareButton__2rtqU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userImg\":\"Users_userImg__3Ymve\",\"container\":\"Users_container__2WnKZ\",\"avatarName\":\"Users_avatarName__2HA0u\",\"infoUser\":\"Users_infoUser___GaNi\",\"followBtn\":\"Users_followBtn__2ZKZF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"Paginator_selectedPage__19j_0\",\"button\":\"Paginator_button__3QbqN\",\"buttonsContainer\":\"Paginator_buttonsContainer__2afpd\",\"controlButton\":\"Paginator_controlButton__VIn89\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttons\":\"ProfileFormData_buttons__3OnP2\",\"container\":\"ProfileFormData_container__ZVVt5\",\"btn\":\"ProfileFormData_btn__FIfGe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__vBCga\",\"container\":\"Post_container__35QhF\",\"avatar\":\"Post_avatar__1ydsm\",\"shareButton\":\"Post_shareButton__bNwaU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__1491N\",\"logoContainer\":\"Header_logoContainer__342c1\",\"nameLogo\":\"Header_nameLogo__1EBMh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__1eGGW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"ProlifeStatus_mainContainer__p1Ia7\",\"statusText\":\"ProlifeStatus_statusText__yTgLM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footerContainer\":\"Footer_footerContainer__kQuAF\",\"authorInfo\":\"Footer_authorInfo__2onlG\"};"],"sourceRoot":""}